/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Video
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Video.V1.Room
{

    /// <summary> create </summary>
    public class CreateTranscriptionsOptions : IOptions<TranscriptionsResource>
    {
        
        ///<summary> The SID of the room new transcriptions resource to be created. </summary> 
        public string PathRoomSid { get; }

        ///<summary> A collection of properties that describe transcription behaviour. </summary> 
        public object Configuration { get; set; }


        /// <summary> Construct a new CreateRoomTranscriptionsOptions </summary>
        /// <param name="pathRoomSid"> The SID of the room new transcriptions resource to be created. </param>
        public CreateTranscriptionsOptions(string pathRoomSid)
        {
            PathRoomSid = pathRoomSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (Configuration != null)
            {
                p.Add(new KeyValuePair<string, string>("Configuration", Serializers.JsonObject(Configuration)));
            }
            return p;
        }

        

    }

    /// <summary> fetch </summary>
    public class FetchTranscriptionsOptions : IOptions<TranscriptionsResource>
    {
    
        ///<summary> The SID of the room with the transcriptions resource to fetch. </summary> 
        public string PathRoomSid { get; }

        ///<summary> The Twilio type id of the transcriptions resource to fetch. </summary> 
        public string PathTtid { get; }



        /// <summary> Construct a new FetchRoomTranscriptionsOptions </summary>
        /// <param name="pathRoomSid"> The SID of the room with the transcriptions resource to fetch. </param>
        /// <param name="pathTtid"> The Twilio type id of the transcriptions resource to fetch. </param>
        public FetchTranscriptionsOptions(string pathRoomSid, string pathTtid)
        {
            PathRoomSid = pathRoomSid;
            PathTtid = pathTtid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> read </summary>
    public class ReadTranscriptionsOptions : ReadOptions<TranscriptionsResource>
    {
    
        ///<summary> The SID of the room with the transcriptions resources to read. </summary> 
        public string PathRoomSid { get; }



        /// <summary> Construct a new ListRoomTranscriptionsOptions </summary>
        /// <param name="pathRoomSid"> The SID of the room with the transcriptions resources to read. </param>
        public ReadTranscriptionsOptions(string pathRoomSid)
        {
            PathRoomSid = pathRoomSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }
            return p;
        }

    

    }

    /// <summary> update </summary>
    public class UpdateTranscriptionsOptions : IOptions<TranscriptionsResource>
    {
    
        ///<summary> The SID of the room with the transcriptions resource to update. </summary> 
        public string PathRoomSid { get; }

        ///<summary> The Twilio type id of the transcriptions resource to update. </summary> 
        public string PathTtid { get; }

        
        public TranscriptionsResource.StatusEnum Status { get; set; }



        /// <summary> Construct a new UpdateRoomTranscriptionsOptions </summary>
        /// <param name="pathRoomSid"> The SID of the room with the transcriptions resource to update. </param>
        /// <param name="pathTtid"> The Twilio type id of the transcriptions resource to update. </param>
        public UpdateTranscriptionsOptions(string pathRoomSid, string pathTtid)
        {
            PathRoomSid = pathRoomSid;
            PathTtid = pathTtid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (Status != null)
            {
                p.Add(new KeyValuePair<string, string>("Status", Status.ToString()));
            }
            return p;
        }

        

    }


}

