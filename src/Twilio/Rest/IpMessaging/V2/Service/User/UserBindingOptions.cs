/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Ip_messaging
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;
using System.Linq;



namespace Twilio.Rest.IpMessaging.V2.Service.User
{
    /// <summary> delete </summary>
    public class DeleteUserBindingOptions : IOptions<UserBindingResource>
    {
        
        
        public string PathServiceSid { get; }

        
        public string PathUserSid { get; }

        
        public string PathSid { get; }



        /// <summary> Construct a new DeleteUserBindingOptions </summary>
        /// <param name="pathServiceSid">  </param>
        /// <param name="pathUserSid">  </param>
        /// <param name="pathSid">  </param>
        public DeleteUserBindingOptions(string pathServiceSid, string pathUserSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathUserSid = pathUserSid;
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> fetch </summary>
    public class FetchUserBindingOptions : IOptions<UserBindingResource>
    {
    
        
        public string PathServiceSid { get; }

        
        public string PathUserSid { get; }

        
        public string PathSid { get; }



        /// <summary> Construct a new FetchUserBindingOptions </summary>
        /// <param name="pathServiceSid">  </param>
        /// <param name="pathUserSid">  </param>
        /// <param name="pathSid">  </param>
        public FetchUserBindingOptions(string pathServiceSid, string pathUserSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathUserSid = pathUserSid;
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> read </summary>
    public class ReadUserBindingOptions : ReadOptions<UserBindingResource>
    {
    
        
        public string PathServiceSid { get; }

        
        public string PathUserSid { get; }

        
        public List<UserBindingResource.BindingTypeEnum> BindingType { get; set; }



        /// <summary> Construct a new ListUserBindingOptions </summary>
        /// <param name="pathServiceSid">  </param>
        /// <param name="pathUserSid">  </param>
        public ReadUserBindingOptions(string pathServiceSid, string pathUserSid)
        {
            PathServiceSid = pathServiceSid;
            PathUserSid = pathUserSid;
            BindingType = new List<UserBindingResource.BindingTypeEnum>();
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (BindingType != null)
            {
                p.AddRange(BindingType.Select(BindingType => new KeyValuePair<string, string>("BindingType", BindingType.ToString())));
            }
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }
            return p;
        }

    

    }

}

