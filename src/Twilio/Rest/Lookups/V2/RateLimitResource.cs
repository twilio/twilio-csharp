/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Constant;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;



namespace Twilio.Rest.Lookups.V2
{
    public class RateLimitResource : Resource
    {
    
        public class RateLimitResponse
        {
            [JsonProperty("field")]
            private string Field {get; set;}
            [JsonProperty("limit")]
            private int? Limit {get; set;}
            [JsonProperty("bucket")]
            private string Bucket {get; set;}
            [JsonProperty("owner")]
            private string Owner {get; set;}
            [JsonProperty("ttl")]
            private int? Ttl {get; set;}
            public RateLimitResponse() { }
            public class Builder
            {
                private RateLimitResponse _rateLimitResponse = new RateLimitResponse();
                public Builder()
                {
                }
                public Builder WithField(string field)
                {
                    _rateLimitResponse.Field= field;
                    return this;
                }
                public Builder WithLimit(int? limit)
                {
                    _rateLimitResponse.Limit= limit;
                    return this;
                }
                public Builder WithBucket(string bucket)
                {
                    _rateLimitResponse.Bucket= bucket;
                    return this;
                }
                public Builder WithOwner(string owner)
                {
                    _rateLimitResponse.Owner= owner;
                    return this;
                }
                public Builder WithTtl(int? ttl)
                {
                    _rateLimitResponse.Ttl= ttl;
                    return this;
                }
                public RateLimitResponse Build()
                {
                    return _rateLimitResponse;
                }
            }
        }

    

        
        private static Request BuildFetchRequest(FetchRateLimitOptions options, ITwilioRestClient client)
        {
            
            string path = "/v2/RateLimits";


            return new Request(
                HttpMethod.Get,
                Rest.Domain.Lookups,
                path,
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> Retrieve the list of rate limits for all fields (if any) It returns also the twilio rate limits. </summary>
        /// <param name="options"> Fetch RateLimit parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of RateLimit </returns>
        public static RateLimitResource Fetch(FetchRateLimitOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary> Retrieve the list of rate limits for all fields (if any) It returns also the twilio rate limits. </summary>
        /// <param name="options"> Fetch RateLimit parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of RateLimit </returns>
        public static async System.Threading.Tasks.Task<RateLimitResource> FetchAsync(FetchRateLimitOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
        #endif
        /// <summary> Retrieve the list of rate limits for all fields (if any) It returns also the twilio rate limits. </summary>
        /// <param name="fields">  </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of RateLimit </returns>
        public static RateLimitResource Fetch(
                                         List<string> fields = null, 
                                        ITwilioRestClient client = null)
        {
            var options = new FetchRateLimitOptions(){ Fields = fields };
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary> Retrieve the list of rate limits for all fields (if any) It returns also the twilio rate limits. </summary>
        /// <param name="fields">  </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of RateLimit </returns>
        public static async System.Threading.Tasks.Task<RateLimitResource> FetchAsync(List<string> fields = null, ITwilioRestClient client = null)
        {
            var options = new FetchRateLimitOptions(){ Fields = fields };
            return await FetchAsync(options, client);
        }
        #endif
    
        /// <summary>
        /// Converts a JSON string into a RateLimitResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> RateLimitResource object represented by the provided JSON </returns>
        public static RateLimitResource FromJson(string json)
        {
            try
            {
                return JsonConvert.DeserializeObject<RateLimitResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }
        /// <summary>
    /// Converts an object into a json string
    /// </summary>
    /// <param name="model"> C# model </param>
    /// <returns> JSON string </returns>
    public static string ToJson(object model)
    {
        try
        {
            return JsonConvert.SerializeObject(model);
        }
        catch (JsonException e)
        {
            throw new ApiException(e.Message, e);
        }
    }

    
        ///<summary> The rate_limits </summary> 
        [JsonProperty("rate_limits")]
        public List<RateLimitResponse> RateLimits { get; private set; }



        private RateLimitResource() {

        }
    }
}

