/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Lookups
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Constant;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Types;


namespace Twilio.Rest.Lookups.V2
{
    public class QueryResource : Resource
    {
    
        public class IdentityMatchParameters
        {
            [JsonProperty("first_name")]
            private string FirstName {get; set;}
            [JsonProperty("last_name")]
            private string LastName {get; set;}
            [JsonProperty("address_line1")]
            private string AddressLine1 {get; set;}
            [JsonProperty("address_line2")]
            private string AddressLine2 {get; set;}
            [JsonProperty("city")]
            private string City {get; set;}
            [JsonProperty("state")]
            private string State {get; set;}
            [JsonProperty("postal_code")]
            private string PostalCode {get; set;}
            [JsonProperty("address_country_code")]
            private string AddressCountryCode {get; set;}
            [JsonProperty("national_id")]
            private string NationalId {get; set;}
            [JsonProperty("date_of_birth")]
            private string DateOfBirth {get; set;}
            public IdentityMatchParameters() { }
            public class Builder
            {
                private IdentityMatchParameters _identityMatchParameters = new IdentityMatchParameters();
                public Builder()
                {
                }
                public Builder WithFirstName(string firstName)
                {
                    _identityMatchParameters.FirstName= firstName;
                    return this;
                }
                public Builder WithLastName(string lastName)
                {
                    _identityMatchParameters.LastName= lastName;
                    return this;
                }
                public Builder WithAddressLine1(string addressLine1)
                {
                    _identityMatchParameters.AddressLine1= addressLine1;
                    return this;
                }
                public Builder WithAddressLine2(string addressLine2)
                {
                    _identityMatchParameters.AddressLine2= addressLine2;
                    return this;
                }
                public Builder WithCity(string city)
                {
                    _identityMatchParameters.City= city;
                    return this;
                }
                public Builder WithState(string state)
                {
                    _identityMatchParameters.State= state;
                    return this;
                }
                public Builder WithPostalCode(string postalCode)
                {
                    _identityMatchParameters.PostalCode= postalCode;
                    return this;
                }
                public Builder WithAddressCountryCode(string addressCountryCode)
                {
                    _identityMatchParameters.AddressCountryCode= addressCountryCode;
                    return this;
                }
                public Builder WithNationalId(string nationalId)
                {
                    _identityMatchParameters.NationalId= nationalId;
                    return this;
                }
                public Builder WithDateOfBirth(string dateOfBirth)
                {
                    _identityMatchParameters.DateOfBirth= dateOfBirth;
                    return this;
                }
                public IdentityMatchParameters Build()
                {
                    return _identityMatchParameters;
                }
            }
        }
        public class ReassignedNumberParameters
        {
            [JsonProperty("last_verified_date")]
            private string LastVerifiedDate {get; set;}
            public ReassignedNumberParameters() { }
            public class Builder
            {
                private ReassignedNumberParameters _reassignedNumberParameters = new ReassignedNumberParameters();
                public Builder()
                {
                }
                public Builder WithLastVerifiedDate(string lastVerifiedDate)
                {
                    _reassignedNumberParameters.LastVerifiedDate= lastVerifiedDate;
                    return this;
                }
                public ReassignedNumberParameters Build()
                {
                    return _reassignedNumberParameters;
                }
            }
        }
        public class RiskParameters
        {
            [JsonProperty("partner_sub_id")]
            private string PartnerSubId {get; set;}
            public RiskParameters() { }
            public class Builder
            {
                private RiskParameters _riskParameters = new RiskParameters();
                public Builder()
                {
                }
                public Builder WithPartnerSubId(string partnerSubId)
                {
                    _riskParameters.PartnerSubId= partnerSubId;
                    return this;
                }
                public RiskParameters Build()
                {
                    return _riskParameters;
                }
            }
        }
        public class LookupBatchRequest
        {
            [JsonProperty("correlation_id")]
            private string CorrelationId {get; set;}
            [JsonProperty("phone_number")]
            private string PhoneNumber {get; set;}
            [JsonConverter(typeof(StringEnumConverter))]
            [JsonProperty("fields")]
            private List<QueryResource.FieldsEnum> Fields {get; set;}
            [JsonProperty("country_code")]
            private string CountryCode {get; set;}
            [JsonProperty("identity_match")]
            private IdentityMatchParameters IdentityMatch {get; set;}
            [JsonProperty("reassigned_number")]
            private ReassignedNumberParameters ReassignedNumber {get; set;}
            [JsonProperty("sms_pumping_risk")]
            private RiskParameters SmsPumpingRisk {get; set;}
            public LookupBatchRequest() { }
            public class Builder
            {
                private LookupBatchRequest _lookupBatchRequest = new LookupBatchRequest();
                public Builder()
                {
                }
                public Builder WithCorrelationId(string correlationId)
                {
                    _lookupBatchRequest.CorrelationId= correlationId;
                    return this;
                }
                public Builder WithPhoneNumber(string phoneNumber)
                {
                    _lookupBatchRequest.PhoneNumber= phoneNumber;
                    return this;
                }
                public Builder WithFields(List<QueryResource.FieldsEnum> fields)
                {
                    _lookupBatchRequest.Fields= fields;
                    return this;
                }
                public Builder WithCountryCode(string countryCode)
                {
                    _lookupBatchRequest.CountryCode= countryCode;
                    return this;
                }
                public Builder WithIdentityMatch(IdentityMatchParameters identityMatch)
                {
                    _lookupBatchRequest.IdentityMatch= identityMatch;
                    return this;
                }
                public Builder WithReassignedNumber(ReassignedNumberParameters reassignedNumber)
                {
                    _lookupBatchRequest.ReassignedNumber= reassignedNumber;
                    return this;
                }
                public Builder WithSmsPumpingRisk(RiskParameters smsPumpingRisk)
                {
                    _lookupBatchRequest.SmsPumpingRisk= smsPumpingRisk;
                    return this;
                }
                public LookupBatchRequest Build()
                {
                    return _lookupBatchRequest;
                }
            }
        }
        public class LookupRequest
        {
            [JsonProperty("phone_numbers")]
            private List<LookupBatchRequest> PhoneNumbers {get; set;}
            public LookupRequest() { }
            public class Builder
            {
                private LookupRequest _lookupRequest = new LookupRequest();
                public Builder()
                {
                }
                public Builder WithPhoneNumbers(List<LookupBatchRequest> phoneNumbers)
                {
                    _lookupRequest.PhoneNumbers= phoneNumbers;
                    return this;
                }
                public LookupRequest Build()
                {
                    return _lookupRequest;
                }
            }
        }
        public class CallerName
        {
            [JsonProperty("caller_name")]
            private string _CallerName {get; set;}
            [JsonProperty("caller_type")]
            private string CallerType {get; set;}
            [JsonProperty("error_code")]
            private int? ErrorCode {get; set;}
            public CallerName() { }
            public class Builder
            {
                private CallerName _callerName = new CallerName();
                public Builder()
                {
                }
                public Builder With_CallerName(string callerName)
                {
                    _callerName._CallerName= callerName;
                    return this;
                }
                public Builder WithCallerType(string callerType)
                {
                    _callerName.CallerType= callerType;
                    return this;
                }
                public Builder WithErrorCode(int? errorCode)
                {
                    _callerName.ErrorCode= errorCode;
                    return this;
                }
                public CallerName Build()
                {
                    return _callerName;
                }
            }
        }
        public class LastSimSwap
        {
            [JsonProperty("last_sim_swap_date")]
            private DateTime? LastSimSwapDate {get; set;}
            [JsonProperty("swapped_period")]
            private string SwappedPeriod {get; set;}
            [JsonProperty("swapped_in_period")]
            private bool? SwappedInPeriod {get; set;}
            public LastSimSwap() { }
            public class Builder
            {
                private LastSimSwap _lastSimSwap = new LastSimSwap();
                public Builder()
                {
                }
                public Builder WithLastSimSwapDate(DateTime? lastSimSwapDate)
                {
                    _lastSimSwap.LastSimSwapDate= lastSimSwapDate;
                    return this;
                }
                public Builder WithSwappedPeriod(string swappedPeriod)
                {
                    _lastSimSwap.SwappedPeriod= swappedPeriod;
                    return this;
                }
                public Builder WithSwappedInPeriod(bool? swappedInPeriod)
                {
                    _lastSimSwap.SwappedInPeriod= swappedInPeriod;
                    return this;
                }
                public LastSimSwap Build()
                {
                    return _lastSimSwap;
                }
            }
        }
        public class SimSwap
        {
            [JsonProperty("last_sim_swap")]
            private LastSimSwap LastSimSwap {get; set;}
            [JsonProperty("carrier_name")]
            private string CarrierName {get; set;}
            [JsonProperty("mobile_country_code")]
            private string MobileCountryCode {get; set;}
            [JsonProperty("mobile_network_code")]
            private string MobileNetworkCode {get; set;}
            [JsonProperty("error_code")]
            private int? ErrorCode {get; set;}
            public SimSwap() { }
            public class Builder
            {
                private SimSwap _simSwap = new SimSwap();
                public Builder()
                {
                }
                public Builder WithLastSimSwap(LastSimSwap lastSimSwap)
                {
                    _simSwap.LastSimSwap= lastSimSwap;
                    return this;
                }
                public Builder WithCarrierName(string carrierName)
                {
                    _simSwap.CarrierName= carrierName;
                    return this;
                }
                public Builder WithMobileCountryCode(string mobileCountryCode)
                {
                    _simSwap.MobileCountryCode= mobileCountryCode;
                    return this;
                }
                public Builder WithMobileNetworkCode(string mobileNetworkCode)
                {
                    _simSwap.MobileNetworkCode= mobileNetworkCode;
                    return this;
                }
                public Builder WithErrorCode(int? errorCode)
                {
                    _simSwap.ErrorCode= errorCode;
                    return this;
                }
                public SimSwap Build()
                {
                    return _simSwap;
                }
            }
        }
        public class CallForwarding
        {
            [JsonProperty("call_forwarding_enabled")]
            private bool? CallForwardingEnabled {get; set;}
            [JsonProperty("error_code")]
            private int? ErrorCode {get; set;}
            public CallForwarding() { }
            public class Builder
            {
                private CallForwarding _callForwarding = new CallForwarding();
                public Builder()
                {
                }
                public Builder WithCallForwardingEnabled(bool? callForwardingEnabled)
                {
                    _callForwarding.CallForwardingEnabled= callForwardingEnabled;
                    return this;
                }
                public Builder WithErrorCode(int? errorCode)
                {
                    _callForwarding.ErrorCode= errorCode;
                    return this;
                }
                public CallForwarding Build()
                {
                    return _callForwarding;
                }
            }
        }
        public class LineTypeIntelligence
        {
            [JsonProperty("mobile_country_code")]
            private string MobileCountryCode {get; set;}
            [JsonProperty("mobile_network_code")]
            private string MobileNetworkCode {get; set;}
            [JsonProperty("carrier_name")]
            private string CarrierName {get; set;}
            [JsonProperty("type")]
            private string Type {get; set;}
            [JsonProperty("error_code")]
            private int? ErrorCode {get; set;}
            public LineTypeIntelligence() { }
            public class Builder
            {
                private LineTypeIntelligence _lineTypeIntelligence = new LineTypeIntelligence();
                public Builder()
                {
                }
                public Builder WithMobileCountryCode(string mobileCountryCode)
                {
                    _lineTypeIntelligence.MobileCountryCode= mobileCountryCode;
                    return this;
                }
                public Builder WithMobileNetworkCode(string mobileNetworkCode)
                {
                    _lineTypeIntelligence.MobileNetworkCode= mobileNetworkCode;
                    return this;
                }
                public Builder WithCarrierName(string carrierName)
                {
                    _lineTypeIntelligence.CarrierName= carrierName;
                    return this;
                }
                public Builder WithType(string type)
                {
                    _lineTypeIntelligence.Type= type;
                    return this;
                }
                public Builder WithErrorCode(int? errorCode)
                {
                    _lineTypeIntelligence.ErrorCode= errorCode;
                    return this;
                }
                public LineTypeIntelligence Build()
                {
                    return _lineTypeIntelligence;
                }
            }
        }
        public class LineStatus
        {
            [JsonProperty("status")]
            private string Status {get; set;}
            [JsonProperty("error_code")]
            private int? ErrorCode {get; set;}
            public LineStatus() { }
            public class Builder
            {
                private LineStatus _lineStatus = new LineStatus();
                public Builder()
                {
                }
                public Builder WithStatus(string status)
                {
                    _lineStatus.Status= status;
                    return this;
                }
                public Builder WithErrorCode(int? errorCode)
                {
                    _lineStatus.ErrorCode= errorCode;
                    return this;
                }
                public LineStatus Build()
                {
                    return _lineStatus;
                }
            }
        }
        public class IdentityMatch
        {
            [JsonProperty("first_name_match")]
            private string FirstNameMatch {get; set;}
            [JsonProperty("last_name_match")]
            private string LastNameMatch {get; set;}
            [JsonProperty("address_lines_match")]
            private string AddressLinesMatch {get; set;}
            [JsonProperty("city_match")]
            private string CityMatch {get; set;}
            [JsonProperty("state_match")]
            private string StateMatch {get; set;}
            [JsonProperty("postal_code_match")]
            private string PostalCodeMatch {get; set;}
            [JsonProperty("address_country_match")]
            private string AddressCountryMatch {get; set;}
            [JsonProperty("national_id_match")]
            private string NationalIdMatch {get; set;}
            [JsonProperty("date_of_birth_match")]
            private string DateOfBirthMatch {get; set;}
            [JsonProperty("summary_score")]
            private int? SummaryScore {get; set;}
            [JsonProperty("error_code")]
            private int? ErrorCode {get; set;}
            [JsonProperty("error_message")]
            private string ErrorMessage {get; set;}
            public IdentityMatch() { }
            public class Builder
            {
                private IdentityMatch _identityMatch = new IdentityMatch();
                public Builder()
                {
                }
                public Builder WithFirstNameMatch(string firstNameMatch)
                {
                    _identityMatch.FirstNameMatch= firstNameMatch;
                    return this;
                }
                public Builder WithLastNameMatch(string lastNameMatch)
                {
                    _identityMatch.LastNameMatch= lastNameMatch;
                    return this;
                }
                public Builder WithAddressLinesMatch(string addressLinesMatch)
                {
                    _identityMatch.AddressLinesMatch= addressLinesMatch;
                    return this;
                }
                public Builder WithCityMatch(string cityMatch)
                {
                    _identityMatch.CityMatch= cityMatch;
                    return this;
                }
                public Builder WithStateMatch(string stateMatch)
                {
                    _identityMatch.StateMatch= stateMatch;
                    return this;
                }
                public Builder WithPostalCodeMatch(string postalCodeMatch)
                {
                    _identityMatch.PostalCodeMatch= postalCodeMatch;
                    return this;
                }
                public Builder WithAddressCountryMatch(string addressCountryMatch)
                {
                    _identityMatch.AddressCountryMatch= addressCountryMatch;
                    return this;
                }
                public Builder WithNationalIdMatch(string nationalIdMatch)
                {
                    _identityMatch.NationalIdMatch= nationalIdMatch;
                    return this;
                }
                public Builder WithDateOfBirthMatch(string dateOfBirthMatch)
                {
                    _identityMatch.DateOfBirthMatch= dateOfBirthMatch;
                    return this;
                }
                public Builder WithSummaryScore(int? summaryScore)
                {
                    _identityMatch.SummaryScore= summaryScore;
                    return this;
                }
                public Builder WithErrorCode(int? errorCode)
                {
                    _identityMatch.ErrorCode= errorCode;
                    return this;
                }
                public Builder WithErrorMessage(string errorMessage)
                {
                    _identityMatch.ErrorMessage= errorMessage;
                    return this;
                }
                public IdentityMatch Build()
                {
                    return _identityMatch;
                }
            }
        }
        public class ReassignedNumber
        {
            [JsonProperty("last_verified_date")]
            private string LastVerifiedDate {get; set;}
            [JsonProperty("is_number_reassigned")]
            private string IsNumberReassigned {get; set;}
            [JsonProperty("error_code")]
            private string ErrorCode {get; set;}
            public ReassignedNumber() { }
            public class Builder
            {
                private ReassignedNumber _reassignedNumber = new ReassignedNumber();
                public Builder()
                {
                }
                public Builder WithLastVerifiedDate(string lastVerifiedDate)
                {
                    _reassignedNumber.LastVerifiedDate= lastVerifiedDate;
                    return this;
                }
                public Builder WithIsNumberReassigned(string isNumberReassigned)
                {
                    _reassignedNumber.IsNumberReassigned= isNumberReassigned;
                    return this;
                }
                public Builder WithErrorCode(string errorCode)
                {
                    _reassignedNumber.ErrorCode= errorCode;
                    return this;
                }
                public ReassignedNumber Build()
                {
                    return _reassignedNumber;
                }
            }
        }
        public class SmsPumpingRisk
        {
            [JsonProperty("carrier_risk_category")]
            private string CarrierRiskCategory {get; set;}
            [JsonProperty("number_blocked")]
            private bool? NumberBlocked {get; set;}
            [JsonProperty("number_blocked_date")]
            private DateTime? NumberBlockedDate {get; set;}
            [JsonProperty("number_blocked_last_3_months")]
            private bool? NumberBlockedLast3Months {get; set;}
            [JsonProperty("sms_pumping_risk_score")]
            private int? SmsPumpingRiskScore {get; set;}
            [JsonProperty("error_code")]
            private int? ErrorCode {get; set;}
            public SmsPumpingRisk() { }
            public class Builder
            {
                private SmsPumpingRisk _smsPumpingRisk = new SmsPumpingRisk();
                public Builder()
                {
                }
                public Builder WithCarrierRiskCategory(string carrierRiskCategory)
                {
                    _smsPumpingRisk.CarrierRiskCategory= carrierRiskCategory;
                    return this;
                }
                public Builder WithNumberBlocked(bool? numberBlocked)
                {
                    _smsPumpingRisk.NumberBlocked= numberBlocked;
                    return this;
                }
                public Builder WithNumberBlockedDate(DateTime? numberBlockedDate)
                {
                    _smsPumpingRisk.NumberBlockedDate= numberBlockedDate;
                    return this;
                }
                public Builder WithNumberBlockedLast3Months(bool? numberBlockedLast3Months)
                {
                    _smsPumpingRisk.NumberBlockedLast3Months= numberBlockedLast3Months;
                    return this;
                }
                public Builder WithSmsPumpingRiskScore(int? smsPumpingRiskScore)
                {
                    _smsPumpingRisk.SmsPumpingRiskScore= smsPumpingRiskScore;
                    return this;
                }
                public Builder WithErrorCode(int? errorCode)
                {
                    _smsPumpingRisk.ErrorCode= errorCode;
                    return this;
                }
                public SmsPumpingRisk Build()
                {
                    return _smsPumpingRisk;
                }
            }
        }
        public class LookupBatchResponse
        {
            [JsonProperty("correlation_id")]
            private string CorrelationId {get; set;}
            [JsonProperty("twilio_error_code")]
            private int? TwilioErrorCode {get; set;}
            [JsonProperty("calling_country_code")]
            private string CallingCountryCode {get; set;}
            [JsonProperty("country_code")]
            private string CountryCode {get; set;}
            [JsonProperty("phone_number")]
            private string PhoneNumber {get; set;}
            [JsonProperty("national_format")]
            private string NationalFormat {get; set;}
            [JsonProperty("valid")]
            private bool? Valid {get; set;}
            [JsonProperty("validation_errors")]
            private List<string> ValidationErrors {get; set;}
            [JsonProperty("caller_name")]
            private CallerName CallerName {get; set;}
            [JsonProperty("sim_swap")]
            private SimSwap SimSwap {get; set;}
            [JsonProperty("call_forwarding")]
            private CallForwarding CallForwarding {get; set;}
            [JsonProperty("line_type_intelligence")]
            private LineTypeIntelligence LineTypeIntelligence {get; set;}
            [JsonProperty("line_status")]
            private LineStatus LineStatus {get; set;}
            [JsonProperty("identity_match")]
            private IdentityMatch IdentityMatch {get; set;}
            [JsonProperty("reassigned_number")]
            private ReassignedNumber ReassignedNumber {get; set;}
            [JsonProperty("sms_pumping_risk")]
            private SmsPumpingRisk SmsPumpingRisk {get; set;}
            [JsonProperty("phone_number_quality_score")]
            private object PhoneNumberQualityScore {get; set;}
            [JsonProperty("pre_fill")]
            private object PreFill {get; set;}
            public LookupBatchResponse() { }
            public class Builder
            {
                private LookupBatchResponse _lookupBatchResponse = new LookupBatchResponse();
                public Builder()
                {
                }
                public Builder WithCorrelationId(string correlationId)
                {
                    _lookupBatchResponse.CorrelationId= correlationId;
                    return this;
                }
                public Builder WithTwilioErrorCode(int? twilioErrorCode)
                {
                    _lookupBatchResponse.TwilioErrorCode= twilioErrorCode;
                    return this;
                }
                public Builder WithCallingCountryCode(string callingCountryCode)
                {
                    _lookupBatchResponse.CallingCountryCode= callingCountryCode;
                    return this;
                }
                public Builder WithCountryCode(string countryCode)
                {
                    _lookupBatchResponse.CountryCode= countryCode;
                    return this;
                }
                public Builder WithPhoneNumber(string phoneNumber)
                {
                    _lookupBatchResponse.PhoneNumber= phoneNumber;
                    return this;
                }
                public Builder WithNationalFormat(string nationalFormat)
                {
                    _lookupBatchResponse.NationalFormat= nationalFormat;
                    return this;
                }
                public Builder WithValid(bool? valid)
                {
                    _lookupBatchResponse.Valid= valid;
                    return this;
                }
                public Builder WithValidationErrors(List<string> validationErrors)
                {
                    _lookupBatchResponse.ValidationErrors= validationErrors;
                    return this;
                }
                public Builder WithCallerName(CallerName callerName)
                {
                    _lookupBatchResponse.CallerName= callerName;
                    return this;
                }
                public Builder WithSimSwap(SimSwap simSwap)
                {
                    _lookupBatchResponse.SimSwap= simSwap;
                    return this;
                }
                public Builder WithCallForwarding(CallForwarding callForwarding)
                {
                    _lookupBatchResponse.CallForwarding= callForwarding;
                    return this;
                }
                public Builder WithLineTypeIntelligence(LineTypeIntelligence lineTypeIntelligence)
                {
                    _lookupBatchResponse.LineTypeIntelligence= lineTypeIntelligence;
                    return this;
                }
                public Builder WithLineStatus(LineStatus lineStatus)
                {
                    _lookupBatchResponse.LineStatus= lineStatus;
                    return this;
                }
                public Builder WithIdentityMatch(IdentityMatch identityMatch)
                {
                    _lookupBatchResponse.IdentityMatch= identityMatch;
                    return this;
                }
                public Builder WithReassignedNumber(ReassignedNumber reassignedNumber)
                {
                    _lookupBatchResponse.ReassignedNumber= reassignedNumber;
                    return this;
                }
                public Builder WithSmsPumpingRisk(SmsPumpingRisk smsPumpingRisk)
                {
                    _lookupBatchResponse.SmsPumpingRisk= smsPumpingRisk;
                    return this;
                }
                public Builder WithPhoneNumberQualityScore(object phoneNumberQualityScore)
                {
                    _lookupBatchResponse.PhoneNumberQualityScore= phoneNumberQualityScore;
                    return this;
                }
                public Builder WithPreFill(object preFill)
                {
                    _lookupBatchResponse.PreFill= preFill;
                    return this;
                }
                public LookupBatchResponse Build()
                {
                    return _lookupBatchResponse;
                }
            }
        }

    
        [JsonConverter(typeof(StringEnumConverter))]
        public sealed class FieldsEnum : StringEnum
        {
            private FieldsEnum(string value) : base(value) {}
            public FieldsEnum() {}
            public static implicit operator FieldsEnum(string value)
            {
                return new FieldsEnum(value);
            }

            public static readonly FieldsEnum CallerName = new FieldsEnum("caller_name");
            public static readonly FieldsEnum SimSwap = new FieldsEnum("sim_swap");
            public static readonly FieldsEnum CallForwarding = new FieldsEnum("call_forwarding");
            public static readonly FieldsEnum LineTypeIntelligence = new FieldsEnum("line_type_intelligence");
            public static readonly FieldsEnum LineStatus = new FieldsEnum("line_status");
            public static readonly FieldsEnum IdentityMatch = new FieldsEnum("identity_match");
            public static readonly FieldsEnum ReassignedNumber = new FieldsEnum("reassigned_number");
            public static readonly FieldsEnum SmsPumpingRisk = new FieldsEnum("sms_pumping_risk");
        }

        
        private static Request BuildCreateRequest(CreateQueryOptions options, ITwilioRestClient client)
        {
            
            string path = "/v2/batch/query";


            return new Request(
                HttpMethod.Post,
                Rest.Domain.Lookups,
                path,

                contentType: EnumConstants.ContentTypeEnum.JSON,
                body: options.GetBody(),
                headerParams: null
            );
        }

        /// <summary> Discussions made regarding how to help the customer to correlation request and response objects: - Respecting the natural order (requests vs. response) - Using phone numbers as unique key - Adding a correlation_id key </summary>
        /// <param name="options"> Create Query parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Query </returns>
        public static QueryResource Create(CreateQueryOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary> Discussions made regarding how to help the customer to correlation request and response objects: - Respecting the natural order (requests vs. response) - Using phone numbers as unique key - Adding a correlation_id key </summary>
        /// <param name="options"> Create Query parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Query </returns>
        public static async System.Threading.Tasks.Task<QueryResource> CreateAsync(CreateQueryOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary> Discussions made regarding how to help the customer to correlation request and response objects: - Respecting the natural order (requests vs. response) - Using phone numbers as unique key - Adding a correlation_id key </summary>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Query </returns>
        public static QueryResource Create(
                                            ITwilioRestClient client = null)
        {
            var options = new CreateQueryOptions(){  };
            return Create(options, client);
        }

        #if !NET35
        /// <summary> Discussions made regarding how to help the customer to correlation request and response objects: - Respecting the natural order (requests vs. response) - Using phone numbers as unique key - Adding a correlation_id key </summary>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Query </returns>
        public static async System.Threading.Tasks.Task<QueryResource> CreateAsync(
                                                                                    ITwilioRestClient client = null)
        {
        var options = new CreateQueryOptions(){  };
            return await CreateAsync(options, client);
        }
        #endif
    
        /// <summary>
        /// Converts a JSON string into a QueryResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> QueryResource object represented by the provided JSON </returns>
        public static QueryResource FromJson(string json)
        {
            try
            {
                return JsonConvert.DeserializeObject<QueryResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }
        /// <summary>
    /// Converts an object into a json string
    /// </summary>
    /// <param name="model"> C# model </param>
    /// <returns> JSON string </returns>
    public static string ToJson(object model)
    {
        try
        {
            return JsonConvert.SerializeObject(model);
        }
        catch (JsonException e)
        {
            throw new ApiException(e.Message, e);
        }
    }

    
        ///<summary> The phone_numbers </summary> 
        [JsonProperty("phone_numbers")]
        public List<LookupBatchResponse> PhoneNumbers { get; private set; }



        private QueryResource() {

        }
    }
}

