/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Messaging.V2
{

    /// <summary> Send a typing indicator to notify the recipient that you are composing a message. Currently supported for whatsapp channel only. For WhatsApp, `messageId` is required.  </summary>
    public class CreateTypingIndicatorOptions : IOptions<TypingIndicatorResource>
    {
        
        ///<summary> Shared channel identifier </summary> 
        public TypingIndicatorResource.ChannelEnum Channel { get; }

        ///<summary> Message SID that identifies the conversation thread for the typing indicator. Must be a valid Twilio Message SID (SM*) or Media SID (MM*) from an existing WhatsApp conversation.  </summary> 
        public string MessageId { get; }


        /// <summary> Construct a new CreateTypingIndicatorOptions </summary>
        /// <param name="channel"> Shared channel identifier </param>
        /// <param name="messageId"> Message SID that identifies the conversation thread for the typing indicator. Must be a valid Twilio Message SID (SM*) or Media SID (MM*) from an existing WhatsApp conversation.  </param>
        public CreateTypingIndicatorOptions(TypingIndicatorResource.ChannelEnum channel, string messageId)
        {
            Channel = channel;
            MessageId = messageId;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (Channel != null)
            {
                p.Add(new KeyValuePair<string, string>("channel", Channel.ToString()));
            }
            if (MessageId != null)
            {
                p.Add(new KeyValuePair<string, string>("messageId", MessageId));
            }
            return p;
        }

        

    }

}

