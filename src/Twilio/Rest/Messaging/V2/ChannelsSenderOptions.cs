/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Messaging
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Messaging.V2
{

    /// <summary> Create a Sender. </summary>
    public class CreateChannelsSenderOptions : IOptions<ChannelsSenderResource>
    {
        
        
        public ChannelsSenderResource.MessagingV2ChannelsSenderRequestsCreate MessagingV2ChannelsSenderRequestsCreate { get; }


        /// <summary> Construct a new CreateChannelsSenderOptions </summary>
        /// <param name="messagingV2ChannelsSenderRequestsCreate">  </param>
        public CreateChannelsSenderOptions(ChannelsSenderResource.MessagingV2ChannelsSenderRequestsCreate messagingV2ChannelsSenderRequestsCreate)
        {
            MessagingV2ChannelsSenderRequestsCreate = messagingV2ChannelsSenderRequestsCreate;
        }

        
        /// <summary> Generate the request body </summary>
        public string GetBody()
        {
            string body = "";

            return body;
        }
        

    }

    /// <summary> (WhatsApp only) Delete a Sender. </summary>
    public class DeleteChannelsSenderOptions : IOptions<ChannelsSenderResource>
    {
        
        ///<summary> The SID of the sender. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new DeleteChannelsSenderOptions </summary>
        /// <param name="pathSid"> The SID of the sender. </param>
        public DeleteChannelsSenderOptions(string pathSid)
        {
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> Retrieve a Sender. </summary>
    public class FetchChannelsSenderOptions : IOptions<ChannelsSenderResource>
    {
    
        ///<summary> The SID of the sender. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new FetchChannelsSenderOptions </summary>
        /// <param name="pathSid"> The SID of the sender. </param>
        public FetchChannelsSenderOptions(string pathSid)
        {
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> Retrieve a list of Senders for an account. </summary>
    public class ReadChannelsSenderOptions : ReadOptions<ChannelsSenderResource>
    {
    
        
        public string Channel { get; }



        /// <summary> Construct a new ListChannelsSenderOptions </summary>
        /// <param name="channel">  </param>
        public ReadChannelsSenderOptions(string channel)
        {
            Channel = channel;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (Channel != null)
            {
                p.Add(new KeyValuePair<string, string>("Channel", Channel));
            }
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }
            return p;
        }

    

    }

    /// <summary> (WhatsApp only) Update a Sender. You can update a sender's information, including `profile`, `webhook`, and `configuration`. To verify a phone number, set `configuration.verification_code` to the One-time Password (OTP) that you received. </summary>
    public class UpdateChannelsSenderOptions : IOptions<ChannelsSenderResource>
    {
    
        ///<summary> The SID of the sender. </summary> 
        public string PathSid { get; }

        
        public ChannelsSenderResource.MessagingV2ChannelsSenderRequestsUpdate MessagingV2ChannelsSenderRequestsUpdate { get; set; }



        /// <summary> Construct a new UpdateChannelsSenderOptions </summary>
        /// <param name="pathSid"> The SID of the sender. </param>
        public UpdateChannelsSenderOptions(string pathSid)
        {
            PathSid = pathSid;
        }

        
        /// <summary> Generate the request body </summary>
        public string GetBody()
        {
            string body = "";

            return body;
        }
        

    }


}

