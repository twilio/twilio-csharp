/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Marketplace
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Constant;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;



namespace Twilio.Rest.Marketplace.V1
{
    public class ModuleDataManagementResource : Resource
    {
    

    

        
        private static Request BuildFetchRequest(FetchModuleDataManagementOptions options, ITwilioRestClient client)
        {
            
            string path = "/v1/Listing/{Sid}";

            string PathSid = options.PathSid;
            path = path.Replace("{"+"Sid"+"}", PathSid);

            return new Request(
                HttpMethod.Get,
                Rest.Domain.Marketplace,
                path,
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> This endpoint returns the data of a given Listing. To find a Listing's SID, use the [Available Add-ons resource](/docs/marketplace/api/available-add-ons) or view its Listing details page in the Console by visiting the [Catalog](https://console.twilio.com/us1/develop/add-ons/catalog) or the [My Listings tab](https://console.twilio.com/us1/develop/add-ons/publish/my-listings) and selecting the Listing. </summary>
        /// <param name="options"> Fetch ModuleDataManagement parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ModuleDataManagement </returns>
        public static ModuleDataManagementResource Fetch(FetchModuleDataManagementOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary> This endpoint returns the data of a given Listing. To find a Listing's SID, use the [Available Add-ons resource](/docs/marketplace/api/available-add-ons) or view its Listing details page in the Console by visiting the [Catalog](https://console.twilio.com/us1/develop/add-ons/catalog) or the [My Listings tab](https://console.twilio.com/us1/develop/add-ons/publish/my-listings) and selecting the Listing. </summary>
        /// <param name="options"> Fetch ModuleDataManagement parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ModuleDataManagement </returns>
        public static async System.Threading.Tasks.Task<ModuleDataManagementResource> FetchAsync(FetchModuleDataManagementOptions options, ITwilioRestClient client = null,  System.Threading.CancellationToken cancellationToken = default)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client), cancellationToken);
            return FromJson(response.Content);
        }
        #endif
        /// <summary> This endpoint returns the data of a given Listing. To find a Listing's SID, use the [Available Add-ons resource](/docs/marketplace/api/available-add-ons) or view its Listing details page in the Console by visiting the [Catalog](https://console.twilio.com/us1/develop/add-ons/catalog) or the [My Listings tab](https://console.twilio.com/us1/develop/add-ons/publish/my-listings) and selecting the Listing. </summary>
        /// <param name="pathSid"> The unique identifier of a Listing. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ModuleDataManagement </returns>
        public static ModuleDataManagementResource Fetch(
                                         string pathSid, 
                                        ITwilioRestClient client = null)
        {
            var options = new FetchModuleDataManagementOptions(pathSid){  };
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary> This endpoint returns the data of a given Listing. To find a Listing's SID, use the [Available Add-ons resource](/docs/marketplace/api/available-add-ons) or view its Listing details page in the Console by visiting the [Catalog](https://console.twilio.com/us1/develop/add-ons/catalog) or the [My Listings tab](https://console.twilio.com/us1/develop/add-ons/publish/my-listings) and selecting the Listing. </summary>
        /// <param name="pathSid"> The unique identifier of a Listing. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ModuleDataManagement </returns>
        public static async System.Threading.Tasks.Task<ModuleDataManagementResource> FetchAsync(string pathSid, ITwilioRestClient client = null,  System.Threading.CancellationToken cancellationToken = default)
        {
            var options = new FetchModuleDataManagementOptions(pathSid){  };
            return await FetchAsync(options, client, cancellationToken);
        }
        #endif
        
        private static Request BuildUpdateRequest(UpdateModuleDataManagementOptions options, ITwilioRestClient client)
        {
            
            string path = "/v1/Listing/{Sid}";

            string PathSid = options.PathSid;
            path = path.Replace("{"+"Sid"+"}", PathSid);

            return new Request(
                HttpMethod.Post,
                Rest.Domain.Marketplace,
                path,
                contentType: EnumConstants.ContentTypeEnum.FORM_URLENCODED,
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> This endpoint updates the data of a given Listing. To find a Listing's SID, use the [Available Add-ons resource](https://www.twilio.com/docs/marketplace/api/available-add-ons) or view its Listing details page in the Console by visiting the [Catalog](https://console.twilio.com/us1/develop/add-ons/catalog) or the [My Listings tab](https://console.twilio.com/us1/develop/add-ons/publish/my-listings) and selecting the Listing. Only Listing owners are allowed to update the Listing. </summary>
        /// <param name="options"> Update ModuleDataManagement parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ModuleDataManagement </returns>
        public static ModuleDataManagementResource Update(UpdateModuleDataManagementOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }

        /// <summary> This endpoint updates the data of a given Listing. To find a Listing's SID, use the [Available Add-ons resource](https://www.twilio.com/docs/marketplace/api/available-add-ons) or view its Listing details page in the Console by visiting the [Catalog](https://console.twilio.com/us1/develop/add-ons/catalog) or the [My Listings tab](https://console.twilio.com/us1/develop/add-ons/publish/my-listings) and selecting the Listing. Only Listing owners are allowed to update the Listing. </summary>
        /// <param name="options"> Update ModuleDataManagement parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ModuleDataManagement </returns>
        #if !NET35
        public static async System.Threading.Tasks.Task<ModuleDataManagementResource> UpdateAsync(UpdateModuleDataManagementOptions options, 
                                                                                                    ITwilioRestClient client = null,
                                                                                                    System.Threading.CancellationToken cancellationToken = default)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildUpdateRequest(options, client), cancellationToken);
            return FromJson(response.Content);
        }
        #endif

        /// <summary> This endpoint updates the data of a given Listing. To find a Listing's SID, use the [Available Add-ons resource](https://www.twilio.com/docs/marketplace/api/available-add-ons) or view its Listing details page in the Console by visiting the [Catalog](https://console.twilio.com/us1/develop/add-ons/catalog) or the [My Listings tab](https://console.twilio.com/us1/develop/add-ons/publish/my-listings) and selecting the Listing. Only Listing owners are allowed to update the Listing. </summary>
        /// <param name="pathSid"> SID that uniquely identifies the Listing. </param>
        /// <param name="moduleInfo"> A JSON object containing essential attributes that define a Listing. </param>
        /// <param name="description"> A JSON object describing the Listing. You can define the main body of the description, highlight key features or aspects of the Listing, and provide code samples for developers if applicable. </param>
        /// <param name="documentation"> A JSON object for providing comprehensive information, instructions, and resources related to the Listing. </param>
        /// <param name="policies"> A JSON object describing the Listing's privacy and legal policies. The maximum file size for Policies is 5MB. </param>
        /// <param name="support"> A JSON object containing information on how Marketplace users can obtain support for the Listing. Use this parameter to provide details such as contact information and support description. </param>
        /// <param name="configuration"> A JSON object for providing Listing-specific configuration. Contains button setup, notification URL, and more. </param>
        /// <param name="pricing"> A JSON object for providing Listing's purchase options. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ModuleDataManagement </returns>
        public static ModuleDataManagementResource Update(
                                          string pathSid,
                                          string moduleInfo = null,
                                          string description = null,
                                          string documentation = null,
                                          string policies = null,
                                          string support = null,
                                          string configuration = null,
                                          string pricing = null,
                                            ITwilioRestClient client = null)
        {
            var options = new UpdateModuleDataManagementOptions(pathSid){ ModuleInfo = moduleInfo, Description = description, Documentation = documentation, Policies = policies, Support = support, Configuration = configuration, Pricing = pricing };
            return Update(options, client);
        }

        #if !NET35
        /// <summary> This endpoint updates the data of a given Listing. To find a Listing's SID, use the [Available Add-ons resource](https://www.twilio.com/docs/marketplace/api/available-add-ons) or view its Listing details page in the Console by visiting the [Catalog](https://console.twilio.com/us1/develop/add-ons/catalog) or the [My Listings tab](https://console.twilio.com/us1/develop/add-ons/publish/my-listings) and selecting the Listing. Only Listing owners are allowed to update the Listing. </summary>
        /// <param name="pathSid"> SID that uniquely identifies the Listing. </param>
        /// <param name="moduleInfo"> A JSON object containing essential attributes that define a Listing. </param>
        /// <param name="description"> A JSON object describing the Listing. You can define the main body of the description, highlight key features or aspects of the Listing, and provide code samples for developers if applicable. </param>
        /// <param name="documentation"> A JSON object for providing comprehensive information, instructions, and resources related to the Listing. </param>
        /// <param name="policies"> A JSON object describing the Listing's privacy and legal policies. The maximum file size for Policies is 5MB. </param>
        /// <param name="support"> A JSON object containing information on how Marketplace users can obtain support for the Listing. Use this parameter to provide details such as contact information and support description. </param>
        /// <param name="configuration"> A JSON object for providing Listing-specific configuration. Contains button setup, notification URL, and more. </param>
        /// <param name="pricing"> A JSON object for providing Listing's purchase options. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ModuleDataManagement </returns>
        public static async System.Threading.Tasks.Task<ModuleDataManagementResource> UpdateAsync(
                                                                              string pathSid,
                                                                              string moduleInfo = null,
                                                                              string description = null,
                                                                              string documentation = null,
                                                                              string policies = null,
                                                                              string support = null,
                                                                              string configuration = null,
                                                                              string pricing = null,
                                                                                ITwilioRestClient client = null , System.Threading.CancellationToken cancellationToken = default)
        {
            var options = new UpdateModuleDataManagementOptions(pathSid){ ModuleInfo = moduleInfo, Description = description, Documentation = documentation, Policies = policies, Support = support, Configuration = configuration, Pricing = pricing };
            return await UpdateAsync(options, client, cancellationToken);
        }
        #endif
    
        /// <summary>
        /// Converts a JSON string into a ModuleDataManagementResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> ModuleDataManagementResource object represented by the provided JSON </returns>
        public static ModuleDataManagementResource FromJson(string json)
        {
            try
            {
                return JsonConvert.DeserializeObject<ModuleDataManagementResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }
        /// <summary>
    /// Converts an object into a json string
    /// </summary>
    /// <param name="model"> C# model </param>
    /// <returns> JSON string </returns>
    public static string ToJson(object model)
    {
        try
        {
            return JsonConvert.SerializeObject(model);
        }
        catch (JsonException e)
        {
            throw new ApiException(e.Message, e);
        }
    }

    
        ///<summary> URL to query the subresource. </summary> 
        [JsonProperty("url")]
        public Uri Url { get; private set; }

        ///<summary> ModuleSid that identifies this Listing. </summary> 
        [JsonProperty("sid")]
        public string Sid { get; private set; }

        ///<summary> A JSON object describing the module and is displayed under the Description tab of the Module detail page. You can define the main body of the description, highlight key features or aspects of the module and if applicable, provide code samples for developers </summary> 
        [JsonProperty("description")]
        public object Description { get; private set; }

        ///<summary> A JSON object containing information on how customers can obtain support for the module. Use this parameter to provide details such as contact information and support description. </summary> 
        [JsonProperty("support")]
        public object Support { get; private set; }

        ///<summary> A JSON object describing the module's privacy and legal policies and is displayed under the Policies tab of the Module detail page. The maximum file size for Policies is 5MB </summary> 
        [JsonProperty("policies")]
        public object Policies { get; private set; }

        ///<summary> A JSON object containing essential attributes that define a module. This information is presented on the Module detail page in the Twilio Marketplace Catalog. You can pass the following attributes in the JSON object </summary> 
        [JsonProperty("module_info")]
        public object ModuleInfo { get; private set; }

        ///<summary> A JSON object for providing comprehensive information, instructions, and resources related to the module </summary> 
        [JsonProperty("documentation")]
        public object Documentation { get; private set; }

        ///<summary> A JSON object for providing listing specific configuration. Contains button setup, notification url, among others. </summary> 
        [JsonProperty("configuration")]
        public object Configuration { get; private set; }

        ///<summary> A JSON object for providing Listing specific pricing information. </summary> 
        [JsonProperty("pricing")]
        public object Pricing { get; private set; }



        private ModuleDataManagementResource() {

        }
    }
}

