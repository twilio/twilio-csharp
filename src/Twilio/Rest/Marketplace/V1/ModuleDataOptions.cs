/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Marketplace
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Marketplace.V1
{

    /// <summary> This endpoint creates a Listing based on the given data. </summary>
    public class CreateModuleDataOptions : IOptions<ModuleDataResource>
    {
        
        ///<summary> A JSON object containing essential attributes that define a Listing. </summary> 
        public string ModuleInfo { get; set; }

        ///<summary> A JSON object for providing Listing-specific configuration. Contains button setup, notification URL, and more. </summary> 
        public string Configuration { get; set; }



        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (ModuleInfo != null)
            {
                p.Add(new KeyValuePair<string, string>("ModuleInfo", ModuleInfo));
            }
            if (Configuration != null)
            {
                p.Add(new KeyValuePair<string, string>("Configuration", Configuration));
            }
            return p;
        }

        

    }
    /// <summary> This endpoint returns the Listings owned by the authenticated Account. </summary>
    public class FetchModuleDataOptions : IOptions<ModuleDataResource>
    {
    



        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


}

