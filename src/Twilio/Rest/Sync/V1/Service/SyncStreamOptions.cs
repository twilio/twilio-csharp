/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Sync
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Sync.V1.Service
{

    /// <summary> Create a new Stream. </summary>
    public class CreateSyncStreamOptions : IOptions<SyncStreamResource>
    {
        
        ///<summary> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) to create the new Stream in. </summary> 
        public string PathServiceSid { get; }

        ///<summary> An application-defined string that uniquely identifies the resource. This value must be unique within its Service and it can be up to 320 characters long. The `unique_name` value can be used as an alternative to the `sid` in the URL path to address the resource. </summary> 
        public string UniqueName { get; set; }

        ///<summary> How long, [in seconds](https://www.twilio.com/docs/sync/limits#sync-payload-limits), before the Stream expires and is deleted (time-to-live). </summary> 
        public int? Ttl { get; set; }


        /// <summary> Construct a new CreateSyncStreamOptions </summary>
        /// <param name="pathServiceSid"> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) to create the new Stream in. </param>
        public CreateSyncStreamOptions(string pathServiceSid)
        {
            PathServiceSid = pathServiceSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (UniqueName != null)
            {
                p.Add(new KeyValuePair<string, string>("UniqueName", UniqueName));
            }
            if (Ttl != null)
            {
                p.Add(new KeyValuePair<string, string>("Ttl", Ttl.ToString()));
            }
            return p;
        }

        

    }
    /// <summary> Delete a specific Stream. </summary>
    public class DeleteSyncStreamOptions : IOptions<SyncStreamResource>
    {
        
        ///<summary> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync Stream resource to delete. </summary> 
        public string PathServiceSid { get; }

        ///<summary> The SID of the Stream resource to delete. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new DeleteSyncStreamOptions </summary>
        /// <param name="pathServiceSid"> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync Stream resource to delete. </param>
        /// <param name="pathSid"> The SID of the Stream resource to delete. </param>
        public DeleteSyncStreamOptions(string pathServiceSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> Fetch a specific Stream. </summary>
    public class FetchSyncStreamOptions : IOptions<SyncStreamResource>
    {
    
        ///<summary> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync Stream resource to fetch. </summary> 
        public string PathServiceSid { get; }

        ///<summary> The SID of the Stream resource to fetch. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new FetchSyncStreamOptions </summary>
        /// <param name="pathServiceSid"> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync Stream resource to fetch. </param>
        /// <param name="pathSid"> The SID of the Stream resource to fetch. </param>
        public FetchSyncStreamOptions(string pathServiceSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> Retrieve a list of all Streams in a Service Instance. </summary>
    public class ReadSyncStreamOptions : ReadOptions<SyncStreamResource>
    {
    
        ///<summary> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Stream resources to read. </summary> 
        public string PathServiceSid { get; }



        /// <summary> Construct a new ListSyncStreamOptions </summary>
        /// <param name="pathServiceSid"> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Stream resources to read. </param>
        public ReadSyncStreamOptions(string pathServiceSid)
        {
            PathServiceSid = pathServiceSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }
            return p;
        }

    

    }

    /// <summary> Update a specific Stream. </summary>
    public class UpdateSyncStreamOptions : IOptions<SyncStreamResource>
    {
    
        ///<summary> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync Stream resource to update. </summary> 
        public string PathServiceSid { get; }

        ///<summary> The SID of the Stream resource to update. </summary> 
        public string PathSid { get; }

        ///<summary> How long, [in seconds](https://www.twilio.com/docs/sync/limits#sync-payload-limits), before the Stream expires and is deleted (time-to-live). </summary> 
        public int? Ttl { get; set; }



        /// <summary> Construct a new UpdateSyncStreamOptions </summary>
        /// <param name="pathServiceSid"> The SID of the [Sync Service](https://www.twilio.com/docs/sync/api/service) with the Sync Stream resource to update. </param>
        /// <param name="pathSid"> The SID of the Stream resource to update. </param>
        public UpdateSyncStreamOptions(string pathServiceSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (Ttl != null)
            {
                p.Add(new KeyValuePair<string, string>("Ttl", Ttl.ToString()));
            }
            return p;
        }

        

    }


}

