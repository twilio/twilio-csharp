/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Assistants
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Assistants.V1
{

    /// <summary> create an assistant </summary>
    public class CreateAssistantOptions : IOptions<AssistantResource>
    {
        
        
        public AssistantResource.AssistantsV1ServiceCreateAssistantRequest AssistantsV1ServiceCreateAssistantRequest { get; }


        /// <summary> Construct a new CreateAssistantOptions </summary>
        /// <param name="assistantsV1ServiceCreateAssistantRequest">  </param>
        public CreateAssistantOptions(AssistantResource.AssistantsV1ServiceCreateAssistantRequest assistantsV1ServiceCreateAssistantRequest)
        {
            AssistantsV1ServiceCreateAssistantRequest = assistantsV1ServiceCreateAssistantRequest;
        }

        
        /// <summary> Generate the request body </summary>
        public string GetBody()
        {
            string body = "";

            if (AssistantsV1ServiceCreateAssistantRequest != null)
            {
                body = AssistantResource.ToJson(AssistantsV1ServiceCreateAssistantRequest);
            }
            return body;
        }
        

    }
    /// <summary> delete an assistant </summary>
    public class DeleteAssistantOptions : IOptions<AssistantResource>
    {
        
        
        public string PathId { get; }



        /// <summary> Construct a new DeleteAssistantOptions </summary>
        /// <param name="pathId">  </param>
        public DeleteAssistantOptions(string pathId)
        {
            PathId = pathId;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

        

    }


    /// <summary> get an assistant </summary>
    public class FetchAssistantOptions : IOptions<AssistantResource>
    {
    
        
        public string PathId { get; }



        /// <summary> Construct a new FetchAssistantOptions </summary>
        /// <param name="pathId">  </param>
        public FetchAssistantOptions(string pathId)
        {
            PathId = pathId;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

        

    }


    /// <summary> list assistants </summary>
    public class ReadAssistantOptions : ReadOptions<AssistantResource>
    {
    



        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }
            return p;
        }

        

    }

    /// <summary> update an assistant </summary>
    public class UpdateAssistantOptions : IOptions<AssistantResource>
    {
    
        
        public string PathId { get; }

        
        public AssistantResource.AssistantsV1ServiceUpdateAssistantRequest AssistantsV1ServiceUpdateAssistantRequest { get; set; }



        /// <summary> Construct a new UpdateAssistantOptions </summary>
        /// <param name="pathId">  </param>
        public UpdateAssistantOptions(string pathId)
        {
            PathId = pathId;
        }

        
        /// <summary> Generate the request body </summary>
        public string GetBody()
        {
            string body = "";

            if (AssistantsV1ServiceUpdateAssistantRequest != null)
            {
                body = AssistantResource.ToJson(AssistantsV1ServiceUpdateAssistantRequest);
            }
            return body;
        }
        

    }


}

