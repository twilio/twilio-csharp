/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Assistants
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Assistants.V1
{

    /// <summary> Create knowledge </summary>
    public class CreateKnowledgeOptions : IOptions<KnowledgeResource>
    {
        
        
        public KnowledgeResource.AssistantsV1ServiceCreateKnowledgeRequest AssistantsV1ServiceCreateKnowledgeRequest { get; }


        /// <summary> Construct a new CreateKnowledgeOptions </summary>
        /// <param name="assistantsV1ServiceCreateKnowledgeRequest">  </param>
        public CreateKnowledgeOptions(KnowledgeResource.AssistantsV1ServiceCreateKnowledgeRequest assistantsV1ServiceCreateKnowledgeRequest)
        {
            AssistantsV1ServiceCreateKnowledgeRequest = assistantsV1ServiceCreateKnowledgeRequest;
        }

        
        /// <summary> Generate the request body </summary>
        public string GetBody()
        {
            string body = "";

            if (AssistantsV1ServiceCreateKnowledgeRequest != null)
            {
                body = KnowledgeResource.ToJson(AssistantsV1ServiceCreateKnowledgeRequest);
            }
            return body;
        }
        

    }
    /// <summary> Delete knowledge </summary>
    public class DeleteKnowledgeOptions : IOptions<KnowledgeResource>
    {
        
        ///<summary> the Knowledge ID. </summary> 
        public string PathId { get; }



        /// <summary> Construct a new DeleteKnowledgeOptions </summary>
        /// <param name="pathId"> the Knowledge ID. </param>
        public DeleteKnowledgeOptions(string pathId)
        {
            PathId = pathId;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> Get knowledge </summary>
    public class FetchKnowledgeOptions : IOptions<KnowledgeResource>
    {
    
        
        public string PathId { get; }



        /// <summary> Construct a new FetchKnowledgeOptions </summary>
        /// <param name="pathId">  </param>
        public FetchKnowledgeOptions(string pathId)
        {
            PathId = pathId;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> List all knowledge </summary>
    public class ReadKnowledgeOptions : ReadOptions<KnowledgeResource>
    {
    
        
        public string AssistantId { get; set; }




        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (AssistantId != null)
            {
                p.Add(new KeyValuePair<string, string>("AssistantId", AssistantId));
            }
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }
            return p;
        }

    

    }

    /// <summary> Update knowledge </summary>
    public class UpdateKnowledgeOptions : IOptions<KnowledgeResource>
    {
    
        
        public string PathId { get; }

        
        public KnowledgeResource.AssistantsV1ServiceUpdateKnowledgeRequest AssistantsV1ServiceUpdateKnowledgeRequest { get; set; }



        /// <summary> Construct a new UpdateKnowledgeOptions </summary>
        /// <param name="pathId">  </param>
        public UpdateKnowledgeOptions(string pathId)
        {
            PathId = pathId;
        }

        
        /// <summary> Generate the request body </summary>
        public string GetBody()
        {
            string body = "";

            if (AssistantsV1ServiceUpdateKnowledgeRequest != null)
            {
                body = KnowledgeResource.ToJson(AssistantsV1ServiceUpdateKnowledgeRequest);
            }
            return body;
        }
        

    }


}

