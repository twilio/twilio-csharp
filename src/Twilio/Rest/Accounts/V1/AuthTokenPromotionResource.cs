/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Accounts
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Constant;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;



namespace Twilio.Rest.Accounts.V1
{
    public class AuthTokenPromotionResource : Resource
    {
    

    

        
        private static Request BuildUpdateRequest(UpdateAuthTokenPromotionOptions options, ITwilioRestClient client)
        {
            
            string path = "/v1/AuthTokens/Promote";


            return new Request(
                HttpMethod.Post,
                Rest.Domain.Accounts,
                path,
                contentType: EnumConstants.ContentTypeEnum.FORM_URLENCODED,
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> Promote the secondary Auth Token to primary. After promoting the new token, all requests to Twilio using your old primary Auth Token will result in an error. </summary>
        /// <param name="options"> Update AuthTokenPromotion parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of AuthTokenPromotion </returns>
        public static AuthTokenPromotionResource Update(UpdateAuthTokenPromotionOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }

        /// <summary> Promote the secondary Auth Token to primary. After promoting the new token, all requests to Twilio using your old primary Auth Token will result in an error. </summary>
        /// <param name="options"> Update AuthTokenPromotion parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of AuthTokenPromotion </returns>
        #if !NET35
        public static async System.Threading.Tasks.Task<AuthTokenPromotionResource> UpdateAsync(UpdateAuthTokenPromotionOptions options, 
                                                                                                    ITwilioRestClient client = null,
                                                                                                    System.Threading.CancellationToken cancellationToken = default)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildUpdateRequest(options, client), cancellationToken);
            return FromJson(response.Content);
        }
        #endif

        /// <summary> Promote the secondary Auth Token to primary. After promoting the new token, all requests to Twilio using your old primary Auth Token will result in an error. </summary>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of AuthTokenPromotion </returns>
        public static AuthTokenPromotionResource Update(
                                            ITwilioRestClient client = null)
        {
            var options = new UpdateAuthTokenPromotionOptions(){  };
            return Update(options, client);
        }

        #if !NET35
        /// <summary> Promote the secondary Auth Token to primary. After promoting the new token, all requests to Twilio using your old primary Auth Token will result in an error. </summary>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of AuthTokenPromotion </returns>
        public static async System.Threading.Tasks.Task<AuthTokenPromotionResource> UpdateAsync(
                                                                                ITwilioRestClient client = null,
                                                                                System.Threading.CancellationToken cancellationToken = default)
        {
            var options = new UpdateAuthTokenPromotionOptions(){  };
            return await UpdateAsync(options, client, cancellationToken);
        }
        #endif
    
        /// <summary>
        /// Converts a JSON string into a AuthTokenPromotionResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> AuthTokenPromotionResource object represented by the provided JSON </returns>
        public static AuthTokenPromotionResource FromJson(string json)
        {
            try
            {
                return JsonConvert.DeserializeObject<AuthTokenPromotionResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }
        /// <summary>
    /// Converts an object into a json string
    /// </summary>
    /// <param name="model"> C# model </param>
    /// <returns> JSON string </returns>
    public static string ToJson(object model)
    {
        try
        {
            return JsonConvert.SerializeObject(model);
        }
        catch (JsonException e)
        {
            throw new ApiException(e.Message, e);
        }
    }

    
        ///<summary> The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the secondary Auth Token was created for. </summary> 
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }

        ///<summary> The promoted Auth Token that must be used to authenticate future API requests. </summary> 
        [JsonProperty("auth_token")]
        public string AuthToken { get; private set; }

        ///<summary> The date and time in UTC when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. </summary> 
        [JsonProperty("date_created")]
        public DateTime? DateCreated { get; private set; }

        ///<summary> The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. </summary> 
        [JsonProperty("date_updated")]
        public DateTime? DateUpdated { get; private set; }

        ///<summary> The URI for this resource, relative to `https://accounts.twilio.com` </summary> 
        [JsonProperty("url")]
        public Uri Url { get; private set; }



        private AuthTokenPromotionResource() {

        }
    }
}

