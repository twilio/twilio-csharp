/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Preview
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Preview.DeployedDevices.Fleet
{

    /// <summary> Create a new Deployment in the Fleet, optionally giving it a friendly name and linking to a specific Twilio Sync service instance. </summary>
    public class CreateDeploymentOptions : IOptions<DeploymentResource>
    {
        
        
        public string PathFleetSid { get; }

        ///<summary> Provides a human readable descriptive text for this Deployment, up to 256 characters long. </summary> 
        public string FriendlyName { get; set; }

        ///<summary> Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. </summary> 
        public string SyncServiceSid { get; set; }


        /// <summary> Construct a new CreateDeployedDevicesDeploymentOptions </summary>
        /// <param name="pathFleetSid">  </param>
        public CreateDeploymentOptions(string pathFleetSid)
        {
            PathFleetSid = pathFleetSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (FriendlyName != null)
            {
                p.Add(new KeyValuePair<string, string>("FriendlyName", FriendlyName));
            }
            if (SyncServiceSid != null)
            {
                p.Add(new KeyValuePair<string, string>("SyncServiceSid", SyncServiceSid));
            }
            return p;
        }

        

    }
    /// <summary> Delete a specific Deployment from the Fleet, leaving associated devices effectively undeployed. </summary>
    public class DeleteDeploymentOptions : IOptions<DeploymentResource>
    {
        
        
        public string PathFleetSid { get; }

        ///<summary> Provides a 34 character string that uniquely identifies the requested Deployment resource. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new DeleteDeployedDevicesDeploymentOptions </summary>
        /// <param name="pathFleetSid">  </param>
        /// <param name="pathSid"> Provides a 34 character string that uniquely identifies the requested Deployment resource. </param>
        public DeleteDeploymentOptions(string pathFleetSid, string pathSid)
        {
            PathFleetSid = pathFleetSid;
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> Fetch information about a specific Deployment in the Fleet. </summary>
    public class FetchDeploymentOptions : IOptions<DeploymentResource>
    {
    
        
        public string PathFleetSid { get; }

        ///<summary> Provides a 34 character string that uniquely identifies the requested Deployment resource. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new FetchDeployedDevicesDeploymentOptions </summary>
        /// <param name="pathFleetSid">  </param>
        /// <param name="pathSid"> Provides a 34 character string that uniquely identifies the requested Deployment resource. </param>
        public FetchDeploymentOptions(string pathFleetSid, string pathSid)
        {
            PathFleetSid = pathFleetSid;
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> Retrieve a list of all Deployments belonging to the Fleet. </summary>
    public class ReadDeploymentOptions : ReadOptions<DeploymentResource>
    {
    
        
        public string PathFleetSid { get; }



        /// <summary> Construct a new ListDeployedDevicesDeploymentOptions </summary>
        /// <param name="pathFleetSid">  </param>
        public ReadDeploymentOptions(string pathFleetSid)
        {
            PathFleetSid = pathFleetSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }
            return p;
        }

    

    }

    /// <summary> Update the given properties of a specific Deployment credential in the Fleet, giving it a friendly name or linking to a specific Twilio Sync service instance. </summary>
    public class UpdateDeploymentOptions : IOptions<DeploymentResource>
    {
    
        
        public string PathFleetSid { get; }

        ///<summary> Provides a 34 character string that uniquely identifies the requested Deployment resource. </summary> 
        public string PathSid { get; }

        ///<summary> Provides a human readable descriptive text for this Deployment, up to 64 characters long </summary> 
        public string FriendlyName { get; set; }

        ///<summary> Provides the unique string identifier of the Twilio Sync service instance that will be linked to and accessible by this Deployment. </summary> 
        public string SyncServiceSid { get; set; }



        /// <summary> Construct a new UpdateDeployedDevicesDeploymentOptions </summary>
        /// <param name="pathFleetSid">  </param>
        /// <param name="pathSid"> Provides a 34 character string that uniquely identifies the requested Deployment resource. </param>
        public UpdateDeploymentOptions(string pathFleetSid, string pathSid)
        {
            PathFleetSid = pathFleetSid;
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (FriendlyName != null)
            {
                p.Add(new KeyValuePair<string, string>("FriendlyName", FriendlyName));
            }
            if (SyncServiceSid != null)
            {
                p.Add(new KeyValuePair<string, string>("SyncServiceSid", SyncServiceSid));
            }
            return p;
        }

        

    }


}

