/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Bulkexports
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Bulkexports.V1
{
    /// <summary> Fetch a specific Export Configuration. </summary>
    public class FetchExportConfigurationOptions : IOptions<ExportConfigurationResource>
    {
    
        ///<summary> The type of communication – Messages, Calls, Conferences, and Participants </summary> 
        public string PathResourceType { get; }



        /// <summary> Construct a new FetchExportConfigurationOptions </summary>
        /// <param name="pathResourceType"> The type of communication – Messages, Calls, Conferences, and Participants </param>
        public FetchExportConfigurationOptions(string pathResourceType)
        {
            PathResourceType = pathResourceType;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

    

    }


    /// <summary> Update a specific Export Configuration. </summary>
    public class UpdateExportConfigurationOptions : IOptions<ExportConfigurationResource>
    {
    
        ///<summary> The type of communication – Messages, Calls, Conferences, and Participants </summary> 
        public string PathResourceType { get; }

        ///<summary> If true, Twilio will automatically generate every day's file when the day is over. </summary> 
        public bool? Enabled { get; set; }

        ///<summary> Stores the URL destination for the method specified in webhook_method. </summary> 
        public Uri WebhookUrl { get; set; }

        ///<summary> Sets whether Twilio should call a webhook URL when the automatic generation is complete, using GET or POST. The actual destination is set in the webhook_url </summary> 
        public string WebhookMethod { get; set; }



        /// <summary> Construct a new UpdateExportConfigurationOptions </summary>
        /// <param name="pathResourceType"> The type of communication – Messages, Calls, Conferences, and Participants </param>
        public UpdateExportConfigurationOptions(string pathResourceType)
        {
            PathResourceType = pathResourceType;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (Enabled != null)
            {
                p.Add(new KeyValuePair<string, string>("Enabled", Enabled.Value.ToString().ToLower()));
            }
            if (WebhookUrl != null)
            {
                p.Add(new KeyValuePair<string, string>("WebhookUrl", Serializers.Url(WebhookUrl)));
            }
            if (WebhookMethod != null)
            {
                p.Add(new KeyValuePair<string, string>("WebhookMethod", WebhookMethod));
            }
            return p;
        }

        

    }


}

