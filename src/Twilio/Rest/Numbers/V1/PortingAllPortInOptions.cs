/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;




namespace Twilio.Rest.Numbers.V1
{
    /// <summary> Retrieve a list of all PortInRequests for a user </summary>
    public class ReadPortingAllPortInOptions : ReadOptions<PortingAllPortInResource>
    {
    
        ///<summary> Page start token, if null then it will start from the beginning </summary> 
        public string Token { get; set; }

        ///<summary> Number of items per page </summary> 
        public int? Size { get; set; }

        ///<summary> Filter by Port in request SID, supports multiple values separated by comma </summary> 
        public string PortInRequestSid { get; set; }

        ///<summary> Filter by Port In request status </summary> 
        public string PortInRequestStatus { get; set; }

        ///<summary> Find all created before a certain date </summary> 
        public DateTime? CreatedBefore { get; set; }

        ///<summary> Find all created after a certain date </summary> 
        public DateTime? CreatedAfter { get; set; }




        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (Token != null)
            {
                p.Add(new KeyValuePair<string, string>("Token", Token));
            }
            if (Size != null)
            {
                p.Add(new KeyValuePair<string, string>("Size", Size.ToString()));
            }
            if (PortInRequestSid != null)
            {
                p.Add(new KeyValuePair<string, string>("PortInRequestSid", PortInRequestSid));
            }
            if (PortInRequestStatus != null)
            {
                p.Add(new KeyValuePair<string, string>("PortInRequestStatus", PortInRequestStatus));
            }
            if (CreatedBefore != null)
            {
                p.Add(new KeyValuePair<string, string>("CreatedBefore", Serializers.DateTimeIso8601(CreatedBefore)));
            }
            if (CreatedAfter != null)
            {
                p.Add(new KeyValuePair<string, string>("CreatedAfter", Serializers.DateTimeIso8601(CreatedAfter)));
            }
            return p;
        }

    

    }

}

