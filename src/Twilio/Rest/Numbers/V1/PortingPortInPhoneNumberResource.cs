/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Constant;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;



namespace Twilio.Rest.Numbers.V1
{
    public class PortingPortInPhoneNumberResource : Resource
    {
    

    

        
        /// <summary> Allows to cancel a port in request phone number by SID </summary>
        /// <param name="options"> Delete PortingPortInPhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortInPhoneNumber </returns>
        private static Request BuildDeleteRequest(DeletePortingPortInPhoneNumberOptions options, ITwilioRestClient client)
        {
            
            string path = "/v1/Porting/PortIn/{PortInRequestSid}/PhoneNumber/{PhoneNumberSid}";

            string PathPortInRequestSid = options.PathPortInRequestSid;
            path = path.Replace("{"+"PortInRequestSid"+"}", PathPortInRequestSid);
            string PathPhoneNumberSid = options.PathPhoneNumberSid;
            path = path.Replace("{"+"PhoneNumberSid"+"}", PathPhoneNumberSid);

            return new Request(
                HttpMethod.Delete,
                Rest.Domain.Numbers,
                path,
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> Allows to cancel a port in request phone number by SID </summary>
        /// <param name="options"> Delete PortingPortInPhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortInPhoneNumber </returns>
        public static bool Delete(DeletePortingPortInPhoneNumberOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildDeleteRequest(options, client));
            return response.StatusCode == System.Net.HttpStatusCode.NoContent;
        }

        #if !NET35
        /// <summary> Allows to cancel a port in request phone number by SID </summary>
        /// <param name="options"> Delete PortingPortInPhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortInPhoneNumber </returns>
        public static async System.Threading.Tasks.Task<bool> DeleteAsync(DeletePortingPortInPhoneNumberOptions options, 
                                                                        ITwilioRestClient client = null,
                                                                        System.Threading.CancellationToken cancellationToken = default)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildDeleteRequest(options, client), cancellationToken);
            return response.StatusCode == System.Net.HttpStatusCode.NoContent;
        }
        #endif

        /// <summary> Allows to cancel a port in request phone number by SID </summary>
        /// <param name="pathPortInRequestSid"> The SID of the Port In request. This is a unique identifier of the port in request. </param>
        /// <param name="pathPhoneNumberSid"> The SID of the Port In request phone number. This is a unique identifier of the phone number. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortInPhoneNumber </returns>
        public static bool Delete(string pathPortInRequestSid, string pathPhoneNumberSid, ITwilioRestClient client = null)
        {
            var options = new DeletePortingPortInPhoneNumberOptions(pathPortInRequestSid, pathPhoneNumberSid)        ;
            return Delete(options, client);
        }

        #if !NET35
        /// <summary> Allows to cancel a port in request phone number by SID </summary>
        /// <param name="pathPortInRequestSid"> The SID of the Port In request. This is a unique identifier of the port in request. </param>
        /// <param name="pathPhoneNumberSid"> The SID of the Port In request phone number. This is a unique identifier of the phone number. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortInPhoneNumber </returns>
        public static async System.Threading.Tasks.Task<bool> DeleteAsync(string pathPortInRequestSid, string pathPhoneNumberSid, ITwilioRestClient client = null , System.Threading.CancellationToken cancellationToken = default)
        {
            var options = new DeletePortingPortInPhoneNumberOptions(pathPortInRequestSid, pathPhoneNumberSid) ;
            return await DeleteAsync(options, client, cancellationToken);
        }
        #endif
        
        private static Request BuildFetchRequest(FetchPortingPortInPhoneNumberOptions options, ITwilioRestClient client)
        {
            
            string path = "/v1/Porting/PortIn/{PortInRequestSid}/PhoneNumber/{PhoneNumberSid}";

            string PathPortInRequestSid = options.PathPortInRequestSid;
            path = path.Replace("{"+"PortInRequestSid"+"}", PathPortInRequestSid);
            string PathPhoneNumberSid = options.PathPhoneNumberSid;
            path = path.Replace("{"+"PhoneNumberSid"+"}", PathPhoneNumberSid);

            return new Request(
                HttpMethod.Get,
                Rest.Domain.Numbers,
                path,
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> Fetch a phone number by port in request SID and phone number SID </summary>
        /// <param name="options"> Fetch PortingPortInPhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortInPhoneNumber </returns>
        public static PortingPortInPhoneNumberResource Fetch(FetchPortingPortInPhoneNumberOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary> Fetch a phone number by port in request SID and phone number SID </summary>
        /// <param name="options"> Fetch PortingPortInPhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortInPhoneNumber </returns>
        public static async System.Threading.Tasks.Task<PortingPortInPhoneNumberResource> FetchAsync(FetchPortingPortInPhoneNumberOptions options, ITwilioRestClient client = null,  System.Threading.CancellationToken cancellationToken = default)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client), cancellationToken);
            return FromJson(response.Content);
        }
        #endif
        /// <summary> Fetch a phone number by port in request SID and phone number SID </summary>
        /// <param name="pathPortInRequestSid"> The SID of the Port In request. This is a unique identifier of the port in request. </param>
        /// <param name="pathPhoneNumberSid"> The SID of the Phone number. This is a unique identifier of the phone number. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortInPhoneNumber </returns>
        public static PortingPortInPhoneNumberResource Fetch(
                                         string pathPortInRequestSid, 
                                         string pathPhoneNumberSid, 
                                        ITwilioRestClient client = null)
        {
            var options = new FetchPortingPortInPhoneNumberOptions(pathPortInRequestSid, pathPhoneNumberSid){  };
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary> Fetch a phone number by port in request SID and phone number SID </summary>
        /// <param name="pathPortInRequestSid"> The SID of the Port In request. This is a unique identifier of the port in request. </param>
        /// <param name="pathPhoneNumberSid"> The SID of the Phone number. This is a unique identifier of the phone number. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortInPhoneNumber </returns>
        public static async System.Threading.Tasks.Task<PortingPortInPhoneNumberResource> FetchAsync(string pathPortInRequestSid, string pathPhoneNumberSid, ITwilioRestClient client = null , System.Threading.CancellationToken cancellationToken = default)
        {
            var options = new FetchPortingPortInPhoneNumberOptions(pathPortInRequestSid, pathPhoneNumberSid){  };
            return await FetchAsync(options, client, cancellationToken);
        }
        #endif
    
        /// <summary>
        /// Converts a JSON string into a PortingPortInPhoneNumberResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> PortingPortInPhoneNumberResource object represented by the provided JSON </returns>
        public static PortingPortInPhoneNumberResource FromJson(string json)
        {
            try
            {
                return JsonConvert.DeserializeObject<PortingPortInPhoneNumberResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }
        /// <summary>
    /// Converts an object into a json string
    /// </summary>
    /// <param name="model"> C# model </param>
    /// <returns> JSON string </returns>
    public static string ToJson(object model)
    {
        try
        {
            return JsonConvert.SerializeObject(model);
        }
        catch (JsonException e)
        {
            throw new ApiException(e.Message, e);
        }
    }

    
        ///<summary> The unique identifier for the port in request that this phone number is associated with. </summary> 
        [JsonProperty("port_in_request_sid")]
        public string PortInRequestSid { get; private set; }

        ///<summary> The unique identifier for this phone number associated with this port in request. </summary> 
        [JsonProperty("phone_number_sid")]
        public string PhoneNumberSid { get; private set; }

        ///<summary> URL reference for this resource. </summary> 
        [JsonProperty("url")]
        public Uri Url { get; private set; }

        ///<summary> Account Sid or subaccount where the phone number(s) will be Ported. </summary> 
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }

        ///<summary> The number type of the phone number. This can be: toll-free, local, mobile or unknown. This field may be null if the number is not portable or if the portability for a number has not yet been evaluated. </summary> 
        [JsonProperty("phone_number_type")]
        public string PhoneNumberType { get; private set; }

        ///<summary> The timestamp for when this port in phone number was created. </summary> 
        [JsonProperty("date_created")]
        public DateTime? DateCreated { get; private set; }

        ///<summary> The ISO country code that this number is associated with. This field may be null if the number is not portable or if the portability for a number has not yet been evaluated. </summary> 
        [JsonProperty("country")]
        public string Country { get; private set; }

        ///<summary> Indicates if the phone number is missing required fields such as a PIN or account number. This field may be null if the number is not portable or if the portability for a number has not yet been evaluated. </summary> 
        [JsonProperty("missing_required_fields")]
        public bool? MissingRequiredFields { get; private set; }

        ///<summary> Timestamp indicating when the Port In Phone Number resource was last modified. </summary> 
        [JsonProperty("last_updated")]
        public DateTime? LastUpdated { get; private set; }

        ///<summary> Phone number to be ported. This will be in the E164 Format. </summary> 
        [JsonProperty("phone_number")]
        [JsonConverter(typeof(PhoneNumberConverter))]
        public Types.PhoneNumber PhoneNumber { get; private set; }

        ///<summary> If the number is portable by Twilio or not. This field may be null if the number portability has not yet been evaluated. If a number is not portable reference the `not_portability_reason_code` and `not_portability_reason` fields for more details </summary> 
        [JsonProperty("portable")]
        public bool? Portable { get; private set; }

        ///<summary> The not portability reason code description. This field may be null if the number is portable or if the portability for a number has not yet been evaluated. </summary> 
        [JsonProperty("not_portability_reason")]
        public string NotPortabilityReason { get; private set; }

        ///<summary> The not portability reason code. This field may be null if the number is portable or if the portability for a number has not yet been evaluated. </summary> 
        [JsonProperty("not_portability_reason_code")]
        public int? NotPortabilityReasonCode { get; private set; }

        ///<summary> The status of the port in phone number. </summary> 
        [JsonProperty("port_in_phone_number_status")]
        public string PortInPhoneNumberStatus { get; private set; }

        ///<summary> The pin required by the losing carrier to do the port out. </summary> 
        [JsonProperty("port_out_pin")]
        public int? PortOutPin { get; private set; }

        ///<summary> The description of the rejection reason provided by the losing carrier. This field may be null if the number has not been rejected by the losing carrier. </summary> 
        [JsonProperty("rejection_reason")]
        public string RejectionReason { get; private set; }

        ///<summary> The code for the rejection reason provided by the losing carrier. This field may be null if the number has not been rejected by the losing carrier. </summary> 
        [JsonProperty("rejection_reason_code")]
        public int? RejectionReasonCode { get; private set; }

        ///<summary> The timestamp the phone number will be ported. This will only be set once a port date has been confirmed. Not all carriers can guarantee a specific time on the port date. Twilio will try its best to get the port completed by this time on the port date. Please subscribe to webhooks for confirmation on when a port has actually been completed. </summary> 
        [JsonProperty("port_date")]
        public DateTime? PortDate { get; private set; }



        private PortingPortInPhoneNumberResource() {

        }
    }
}

