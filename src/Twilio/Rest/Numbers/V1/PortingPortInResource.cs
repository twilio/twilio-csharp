/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Constant;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Types;


namespace Twilio.Rest.Numbers.V1
{
    public class PortingPortInResource : Resource
    {
    
        public class NumbersV1PortingPortInCreatePhoneNumbers
        {
            [JsonProperty("phone_number")]
            private string PhoneNumber {get; set;}
            [JsonProperty("pin")]
            private string Pin {get; set;}
            public NumbersV1PortingPortInCreatePhoneNumbers() { }
            public class Builder
            {
                private NumbersV1PortingPortInCreatePhoneNumbers _numbersV1PortingPortInCreatePhoneNumbers = new NumbersV1PortingPortInCreatePhoneNumbers();
                public Builder()
                {
                }
                public Builder WithPhoneNumber(string phoneNumber)
                {
                    _numbersV1PortingPortInCreatePhoneNumbers.PhoneNumber= phoneNumber;
                    return this;
                }
                public Builder WithPin(string pin)
                {
                    _numbersV1PortingPortInCreatePhoneNumbers.Pin= pin;
                    return this;
                }
                public NumbersV1PortingPortInCreatePhoneNumbers Build()
                {
                    return _numbersV1PortingPortInCreatePhoneNumbers;
                }
            }
        }
        public class NumbersV1PortingAddress
        {
            [JsonProperty("street")]
            private string Street {get; set;}
            [JsonProperty("street_2")]
            private string Street2 {get; set;}
            [JsonProperty("city")]
            private string City {get; set;}
            [JsonProperty("state")]
            private string State {get; set;}
            [JsonProperty("zip")]
            private string Zip {get; set;}
            [JsonProperty("country")]
            private string Country {get; set;}
            public NumbersV1PortingAddress() { }
            public class Builder
            {
                private NumbersV1PortingAddress _numbersV1PortingAddress = new NumbersV1PortingAddress();
                public Builder()
                {
                }
                public Builder WithStreet(string street)
                {
                    _numbersV1PortingAddress.Street= street;
                    return this;
                }
                public Builder WithStreet2(string street2)
                {
                    _numbersV1PortingAddress.Street2= street2;
                    return this;
                }
                public Builder WithCity(string city)
                {
                    _numbersV1PortingAddress.City= city;
                    return this;
                }
                public Builder WithState(string state)
                {
                    _numbersV1PortingAddress.State= state;
                    return this;
                }
                public Builder WithZip(string zip)
                {
                    _numbersV1PortingAddress.Zip= zip;
                    return this;
                }
                public Builder WithCountry(string country)
                {
                    _numbersV1PortingAddress.Country= country;
                    return this;
                }
                public NumbersV1PortingAddress Build()
                {
                    return _numbersV1PortingAddress;
                }
            }
        }
        public class NumbersV1PortingLosingCarrierInformation
        {
            [JsonProperty("customer_name")]
            private string CustomerName {get; set;}
            [JsonProperty("account_number")]
            private string AccountNumber {get; set;}
            [JsonProperty("account_telephone_number")]
            private string AccountTelephoneNumber {get; set;}
            [JsonProperty("address_sid")]
            private string AddressSid {get; set;}
            [JsonProperty("address")]
            private NumbersV1PortingAddress Address {get; set;}
            [JsonProperty("authorized_representative")]
            private string AuthorizedRepresentative {get; set;}
            [JsonProperty("authorized_representative_email")]
            private string AuthorizedRepresentativeEmail {get; set;}
            [JsonConverter(typeof(StringEnumConverter))]
            [JsonProperty("customer_type")]
            private PortingPortInResource.CustomerTypeEnum CustomerType {get; set;}
            [JsonProperty("authorized_representative_katakana")]
            private string AuthorizedRepresentativeKatakana {get; set;}
            [JsonProperty("sub_municipality")]
            private string SubMunicipality {get; set;}
            [JsonProperty("building")]
            private string Building {get; set;}
            [JsonProperty("katakana_name")]
            private string KatakanaName {get; set;}
            public NumbersV1PortingLosingCarrierInformation() { }
            public class Builder
            {
                private NumbersV1PortingLosingCarrierInformation _numbersV1PortingLosingCarrierInformation = new NumbersV1PortingLosingCarrierInformation();
                public Builder()
                {
                }
                public Builder WithCustomerName(string customerName)
                {
                    _numbersV1PortingLosingCarrierInformation.CustomerName= customerName;
                    return this;
                }
                public Builder WithAccountNumber(string accountNumber)
                {
                    _numbersV1PortingLosingCarrierInformation.AccountNumber= accountNumber;
                    return this;
                }
                public Builder WithAccountTelephoneNumber(string accountTelephoneNumber)
                {
                    _numbersV1PortingLosingCarrierInformation.AccountTelephoneNumber= accountTelephoneNumber;
                    return this;
                }
                public Builder WithAddressSid(string addressSid)
                {
                    _numbersV1PortingLosingCarrierInformation.AddressSid= addressSid;
                    return this;
                }
                public Builder WithAddress(NumbersV1PortingAddress address)
                {
                    _numbersV1PortingLosingCarrierInformation.Address= address;
                    return this;
                }
                public Builder WithAuthorizedRepresentative(string authorizedRepresentative)
                {
                    _numbersV1PortingLosingCarrierInformation.AuthorizedRepresentative= authorizedRepresentative;
                    return this;
                }
                public Builder WithAuthorizedRepresentativeEmail(string authorizedRepresentativeEmail)
                {
                    _numbersV1PortingLosingCarrierInformation.AuthorizedRepresentativeEmail= authorizedRepresentativeEmail;
                    return this;
                }
                public Builder WithCustomerType(PortingPortInResource.CustomerTypeEnum customerType)
                {
                    _numbersV1PortingLosingCarrierInformation.CustomerType= customerType;
                    return this;
                }
                public Builder WithAuthorizedRepresentativeKatakana(string authorizedRepresentativeKatakana)
                {
                    _numbersV1PortingLosingCarrierInformation.AuthorizedRepresentativeKatakana= authorizedRepresentativeKatakana;
                    return this;
                }
                public Builder WithSubMunicipality(string subMunicipality)
                {
                    _numbersV1PortingLosingCarrierInformation.SubMunicipality= subMunicipality;
                    return this;
                }
                public Builder WithBuilding(string building)
                {
                    _numbersV1PortingLosingCarrierInformation.Building= building;
                    return this;
                }
                public Builder WithKatakanaName(string katakanaName)
                {
                    _numbersV1PortingLosingCarrierInformation.KatakanaName= katakanaName;
                    return this;
                }
                public NumbersV1PortingLosingCarrierInformation Build()
                {
                    return _numbersV1PortingLosingCarrierInformation;
                }
            }
        }
        public class NumbersV1PortingPortInCreate
        {
            [JsonProperty("account_sid")]
            private string AccountSid {get; set;}
            [JsonProperty("documents")]
            private List<string> Documents {get; set;}
            [JsonProperty("phone_numbers")]
            private List<NumbersV1PortingPortInCreatePhoneNumbers> PhoneNumbers {get; set;}
            [JsonProperty("losing_carrier_information")]
            private NumbersV1PortingLosingCarrierInformation LosingCarrierInformation {get; set;}
            [JsonProperty("notification_emails")]
            private List<string> NotificationEmails {get; set;}
            [JsonProperty("target_port_in_date")]
            private DateTime? TargetPortInDate {get; set;}
            [JsonProperty("target_port_in_time_range_start")]
            private string TargetPortInTimeRangeStart {get; set;}
            [JsonProperty("target_port_in_time_range_end")]
            private string TargetPortInTimeRangeEnd {get; set;}
            [JsonProperty("bundle_sid")]
            private string BundleSid {get; set;}
            [JsonProperty("portability_advance_carrier")]
            private string PortabilityAdvanceCarrier {get; set;}
            [JsonProperty("auto_cancel_approval_numbers")]
            private string AutoCancelApprovalNumbers {get; set;}
            public NumbersV1PortingPortInCreate() { }
            public class Builder
            {
                private NumbersV1PortingPortInCreate _numbersV1PortingPortInCreate = new NumbersV1PortingPortInCreate();
                public Builder()
                {
                }
                public Builder WithAccountSid(string accountSid)
                {
                    _numbersV1PortingPortInCreate.AccountSid= accountSid;
                    return this;
                }
                public Builder WithDocuments(List<string> documents)
                {
                    _numbersV1PortingPortInCreate.Documents= documents;
                    return this;
                }
                public Builder WithPhoneNumbers(List<NumbersV1PortingPortInCreatePhoneNumbers> phoneNumbers)
                {
                    _numbersV1PortingPortInCreate.PhoneNumbers= phoneNumbers;
                    return this;
                }
                public Builder WithLosingCarrierInformation(NumbersV1PortingLosingCarrierInformation losingCarrierInformation)
                {
                    _numbersV1PortingPortInCreate.LosingCarrierInformation= losingCarrierInformation;
                    return this;
                }
                public Builder WithNotificationEmails(List<string> notificationEmails)
                {
                    _numbersV1PortingPortInCreate.NotificationEmails= notificationEmails;
                    return this;
                }
                public Builder WithTargetPortInDate(DateTime? targetPortInDate)
                {
                    _numbersV1PortingPortInCreate.TargetPortInDate= targetPortInDate;
                    return this;
                }
                public Builder WithTargetPortInTimeRangeStart(string targetPortInTimeRangeStart)
                {
                    _numbersV1PortingPortInCreate.TargetPortInTimeRangeStart= targetPortInTimeRangeStart;
                    return this;
                }
                public Builder WithTargetPortInTimeRangeEnd(string targetPortInTimeRangeEnd)
                {
                    _numbersV1PortingPortInCreate.TargetPortInTimeRangeEnd= targetPortInTimeRangeEnd;
                    return this;
                }
                public Builder WithBundleSid(string bundleSid)
                {
                    _numbersV1PortingPortInCreate.BundleSid= bundleSid;
                    return this;
                }
                public Builder WithPortabilityAdvanceCarrier(string portabilityAdvanceCarrier)
                {
                    _numbersV1PortingPortInCreate.PortabilityAdvanceCarrier= portabilityAdvanceCarrier;
                    return this;
                }
                public Builder WithAutoCancelApprovalNumbers(string autoCancelApprovalNumbers)
                {
                    _numbersV1PortingPortInCreate.AutoCancelApprovalNumbers= autoCancelApprovalNumbers;
                    return this;
                }
                public NumbersV1PortingPortInCreate Build()
                {
                    return _numbersV1PortingPortInCreate;
                }
            }
        }
        public class NumbersV1PortingPortInPhoneNumberResult
        {
            [JsonProperty("not_portability_reason")]
            private string NotPortabilityReason {get; set;}
            [JsonProperty("not_portability_reason_code")]
            private int? NotPortabilityReasonCode {get; set;}
            [JsonProperty("number_type")]
            private string NumberType {get; set;}
            [JsonProperty("phone_number")]
            private string PhoneNumber {get; set;}
            [JsonProperty("port_date")]
            private DateTime? PortDate {get; set;}
            [JsonProperty("port_in_phone_number_sid")]
            private string PortInPhoneNumberSid {get; set;}
            [JsonProperty("port_in_phone_number_status")]
            private string PortInPhoneNumberStatus {get; set;}
            [JsonProperty("portable")]
            private bool? Portable {get; set;}
            [JsonProperty("rejection_reason")]
            private string RejectionReason {get; set;}
            [JsonProperty("rejection_reason_code")]
            private string RejectionReasonCode {get; set;}
            [JsonProperty("status_last_time_updated_timestamp")]
            private string StatusLastTimeUpdatedTimestamp {get; set;}
            [JsonProperty("external_porting_vendor_phone_number_id")]
            private string ExternalPortingVendorPhoneNumberId {get; set;}
            public NumbersV1PortingPortInPhoneNumberResult() { }
            public class Builder
            {
                private NumbersV1PortingPortInPhoneNumberResult _numbersV1PortingPortInPhoneNumberResult = new NumbersV1PortingPortInPhoneNumberResult();
                public Builder()
                {
                }
                public Builder WithNotPortabilityReason(string notPortabilityReason)
                {
                    _numbersV1PortingPortInPhoneNumberResult.NotPortabilityReason= notPortabilityReason;
                    return this;
                }
                public Builder WithNotPortabilityReasonCode(int? notPortabilityReasonCode)
                {
                    _numbersV1PortingPortInPhoneNumberResult.NotPortabilityReasonCode= notPortabilityReasonCode;
                    return this;
                }
                public Builder WithNumberType(string numberType)
                {
                    _numbersV1PortingPortInPhoneNumberResult.NumberType= numberType;
                    return this;
                }
                public Builder WithPhoneNumber(string phoneNumber)
                {
                    _numbersV1PortingPortInPhoneNumberResult.PhoneNumber= phoneNumber;
                    return this;
                }
                public Builder WithPortDate(DateTime? portDate)
                {
                    _numbersV1PortingPortInPhoneNumberResult.PortDate= portDate;
                    return this;
                }
                public Builder WithPortInPhoneNumberSid(string portInPhoneNumberSid)
                {
                    _numbersV1PortingPortInPhoneNumberResult.PortInPhoneNumberSid= portInPhoneNumberSid;
                    return this;
                }
                public Builder WithPortInPhoneNumberStatus(string portInPhoneNumberStatus)
                {
                    _numbersV1PortingPortInPhoneNumberResult.PortInPhoneNumberStatus= portInPhoneNumberStatus;
                    return this;
                }
                public Builder WithPortable(bool? portable)
                {
                    _numbersV1PortingPortInPhoneNumberResult.Portable= portable;
                    return this;
                }
                public Builder WithRejectionReason(string rejectionReason)
                {
                    _numbersV1PortingPortInPhoneNumberResult.RejectionReason= rejectionReason;
                    return this;
                }
                public Builder WithRejectionReasonCode(string rejectionReasonCode)
                {
                    _numbersV1PortingPortInPhoneNumberResult.RejectionReasonCode= rejectionReasonCode;
                    return this;
                }
                public Builder WithStatusLastTimeUpdatedTimestamp(string statusLastTimeUpdatedTimestamp)
                {
                    _numbersV1PortingPortInPhoneNumberResult.StatusLastTimeUpdatedTimestamp= statusLastTimeUpdatedTimestamp;
                    return this;
                }
                public Builder WithExternalPortingVendorPhoneNumberId(string externalPortingVendorPhoneNumberId)
                {
                    _numbersV1PortingPortInPhoneNumberResult.ExternalPortingVendorPhoneNumberId= externalPortingVendorPhoneNumberId;
                    return this;
                }
                public NumbersV1PortingPortInPhoneNumberResult Build()
                {
                    return _numbersV1PortingPortInPhoneNumberResult;
                }
            }
        }

    
        [JsonConverter(typeof(StringEnumConverter))]
        public sealed class CustomerTypeEnum : StringEnum
        {
            private CustomerTypeEnum(string value) : base(value) {}
            public CustomerTypeEnum() {}
            public static implicit operator CustomerTypeEnum(string value)
            {
                return new CustomerTypeEnum(value);
            }
            public static readonly CustomerTypeEnum Business = new CustomerTypeEnum("Business");
            public static readonly CustomerTypeEnum Individual = new CustomerTypeEnum("Individual");

        }

        
        private static Request BuildCreateRequest(CreatePortingPortInOptions options, ITwilioRestClient client)
        {
            
            string path = "/v1/Porting/PortIn";


            return new Request(
                HttpMethod.Post,
                Rest.Domain.Numbers,
                path,

                contentType: EnumConstants.ContentTypeEnum.JSON,
                body: options.GetBody(),
                headerParams: null
            );
        }

        /// <summary> Allows to create a new port in request </summary>
        /// <param name="options"> Create PortingPortIn parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortIn </returns>
        public static PortingPortInResource Create(CreatePortingPortInOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary> Allows to create a new port in request </summary>
        /// <param name="options"> Create PortingPortIn parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortIn </returns>
        public static async System.Threading.Tasks.Task<PortingPortInResource> CreateAsync(CreatePortingPortInOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary> Allows to create a new port in request </summary>
        /// <param name="numbersV1PortingPortInCreate">  </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortIn </returns>
        public static PortingPortInResource Create(
                                          PortingPortInResource.NumbersV1PortingPortInCreate numbersV1PortingPortInCreate,
                                            ITwilioRestClient client = null)
        {
            var options = new CreatePortingPortInOptions(numbersV1PortingPortInCreate){  };
            return Create(options, client);
        }

        #if !NET35
        /// <summary> Allows to create a new port in request </summary>
        /// <param name="numbersV1PortingPortInCreate">  </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortIn </returns>
        public static async System.Threading.Tasks.Task<PortingPortInResource> CreateAsync(
                                                                                  PortingPortInResource.NumbersV1PortingPortInCreate numbersV1PortingPortInCreate,
                                                                                    ITwilioRestClient client = null)
        {
        var options = new CreatePortingPortInOptions(numbersV1PortingPortInCreate){  };
            return await CreateAsync(options, client);
        }
        #endif
        
        /// <summary> Allows to cancel a port in request by SID </summary>
        /// <param name="options"> Delete PortingPortIn parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortIn </returns>
        private static Request BuildDeleteRequest(DeletePortingPortInOptions options, ITwilioRestClient client)
        {
            
            string path = "/v1/Porting/PortIn/{PortInRequestSid}";

            string PathPortInRequestSid = options.PathPortInRequestSid;
            path = path.Replace("{"+"PortInRequestSid"+"}", PathPortInRequestSid);

            return new Request(
                HttpMethod.Delete,
                Rest.Domain.Numbers,
                path,
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> Allows to cancel a port in request by SID </summary>
        /// <param name="options"> Delete PortingPortIn parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortIn </returns>
        public static bool Delete(DeletePortingPortInOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildDeleteRequest(options, client));
            return response.StatusCode == System.Net.HttpStatusCode.NoContent;
        }

        #if !NET35
        /// <summary> Allows to cancel a port in request by SID </summary>
        /// <param name="options"> Delete PortingPortIn parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortIn </returns>
        public static async System.Threading.Tasks.Task<bool> DeleteAsync(DeletePortingPortInOptions options,
                                                                        ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildDeleteRequest(options, client));
            return response.StatusCode == System.Net.HttpStatusCode.NoContent;
        }
        #endif

        /// <summary> Allows to cancel a port in request by SID </summary>
        /// <param name="pathPortInRequestSid"> The SID of the Port In request. This is a unique identifier of the port in request. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortIn </returns>
        public static bool Delete(string pathPortInRequestSid, ITwilioRestClient client = null)
        {
            var options = new DeletePortingPortInOptions(pathPortInRequestSid)     ;
            return Delete(options, client);
        }

        #if !NET35
        /// <summary> Allows to cancel a port in request by SID </summary>
        /// <param name="pathPortInRequestSid"> The SID of the Port In request. This is a unique identifier of the port in request. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortIn </returns>
        public static async System.Threading.Tasks.Task<bool> DeleteAsync(string pathPortInRequestSid, ITwilioRestClient client = null)
        {
            var options = new DeletePortingPortInOptions(pathPortInRequestSid) ;
            return await DeleteAsync(options, client);
        }
        #endif
        
        private static Request BuildFetchRequest(FetchPortingPortInOptions options, ITwilioRestClient client)
        {
            
            string path = "/v1/Porting/PortIn/{PortInRequestSid}";

            string PathPortInRequestSid = options.PathPortInRequestSid;
            path = path.Replace("{"+"PortInRequestSid"+"}", PathPortInRequestSid);

            return new Request(
                HttpMethod.Get,
                Rest.Domain.Numbers,
                path,
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> Fetch a port in request by SID </summary>
        /// <param name="options"> Fetch PortingPortIn parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortIn </returns>
        public static PortingPortInResource Fetch(FetchPortingPortInOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary> Fetch a port in request by SID </summary>
        /// <param name="options"> Fetch PortingPortIn parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortIn </returns>
        public static async System.Threading.Tasks.Task<PortingPortInResource> FetchAsync(FetchPortingPortInOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
        #endif
        /// <summary> Fetch a port in request by SID </summary>
        /// <param name="pathPortInRequestSid"> The SID of the Port In request. This is a unique identifier of the port in request. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PortingPortIn </returns>
        public static PortingPortInResource Fetch(
                                         string pathPortInRequestSid, 
                                        ITwilioRestClient client = null)
        {
            var options = new FetchPortingPortInOptions(pathPortInRequestSid){  };
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary> Fetch a port in request by SID </summary>
        /// <param name="pathPortInRequestSid"> The SID of the Port In request. This is a unique identifier of the port in request. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PortingPortIn </returns>
        public static async System.Threading.Tasks.Task<PortingPortInResource> FetchAsync(string pathPortInRequestSid, ITwilioRestClient client = null)
        {
            var options = new FetchPortingPortInOptions(pathPortInRequestSid){  };
            return await FetchAsync(options, client);
        }
        #endif
    
        /// <summary>
        /// Converts a JSON string into a PortingPortInResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> PortingPortInResource object represented by the provided JSON </returns>
        public static PortingPortInResource FromJson(string json)
        {
            try
            {
                return JsonConvert.DeserializeObject<PortingPortInResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }
        /// <summary>
    /// Converts an object into a json string
    /// </summary>
    /// <param name="model"> C# model </param>
    /// <returns> JSON string </returns>
    public static string ToJson(object model)
    {
        try
        {
            return JsonConvert.SerializeObject(model);
        }
        catch (JsonException e)
        {
            throw new ApiException(e.Message, e);
        }
    }

    
        ///<summary> The SID of the Port In request. This is a unique identifier of the port in request. </summary> 
        [JsonProperty("port_in_request_sid")]
        public string PortInRequestSid { get; private set; }

        ///<summary> The URL of this Port In request </summary> 
        [JsonProperty("url")]
        public Uri Url { get; private set; }

        ///<summary> Account Sid or subaccount where the phone number(s) will be Ported </summary> 
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }

        ///<summary> Additional emails to send a copy of the signed LOA to. </summary> 
        [JsonProperty("notification_emails")]
        public List<string> NotificationEmails { get; private set; }

        ///<summary> Target date to port the number. We cannot guarantee that this date will be honored by the other carriers, please work with Ops to get a confirmation of the firm order commitment (FOC) date. Expected format is ISO Local Date, example: ‘2011-12-03`. This date must be at least 7 days in the future for US ports and 10 days in the future for Japanese ports. If a start and end range is provided, the date will be converted to its UTC equivalent with the ranges as reference and stored in UTC. We can't guarantee the exact date and time, as this depends on the losing carrier. </summary> 
        [JsonProperty("target_port_in_date")]
        public DateTime? TargetPortInDate { get; private set; }

        ///<summary> The earliest time that the port should occur on the target port in date. Expected format is ISO Offset Time, example: ‘10:15:00-08:00'. We can't guarantee the exact date and time, as this depends on the losing carrier. The time will be stored and returned as UTC standard timezone. </summary> 
        [JsonProperty("target_port_in_time_range_start")]
        public string TargetPortInTimeRangeStart { get; private set; }

        ///<summary> The latest time that the port should occur on the target port in date. Expected format is ISO Offset Time, example: ‘10:15:00-08:00'. We can't guarantee the exact date and time, as this depends on the losing carrier. The time will be stored and returned as UTC standard timezone. </summary> 
        [JsonProperty("target_port_in_time_range_end")]
        public string TargetPortInTimeRangeEnd { get; private set; }

        ///<summary> The status of the port in request. The possible values are: In progress, Completed, Expired, In review, Waiting for Signature, Action Required, and Canceled. </summary> 
        [JsonProperty("port_in_request_status")]
        public string PortInRequestStatus { get; private set; }

        ///<summary> If the order is cancelled this field will provide further context on the cause of the cancellation. </summary> 
        [JsonProperty("order_cancellation_reason")]
        public string OrderCancellationReason { get; private set; }

        ///<summary> The losing_carrier_information </summary> 
        [JsonProperty("losing_carrier_information")]
        public NumbersV1PortingLosingCarrierInformation LosingCarrierInformation { get; private set; }

        ///<summary> The phone_numbers </summary> 
        [JsonProperty("phone_numbers")]
        public List<NumbersV1PortingPortInPhoneNumberResult> PhoneNumbers { get; private set; }

        ///<summary> The bundle sid is an optional identifier to reference a group of regulatory documents for a port request. </summary> 
        [JsonProperty("bundle_sid")]
        public string BundleSid { get; private set; }

        ///<summary> A field only required for Japan port in requests. It is a unique identifier for the donor carrier service the line is being ported from. </summary> 
        [JsonProperty("portability_advance_carrier")]
        public string PortabilityAdvanceCarrier { get; private set; }

        ///<summary> Japan specific field, indicates the number of phone numbers to automatically approve for cancellation. </summary> 
        [JsonProperty("auto_cancel_approval_numbers")]
        public string AutoCancelApprovalNumbers { get; private set; }

        ///<summary> List of document SIDs for all phone numbers included in the port in request. At least one document SID referring to a document of the type Utility Bill is required. </summary> 
        [JsonProperty("documents")]
        public List<string> Documents { get; private set; }

        ///<summary> The date_created </summary> 
        [JsonProperty("date_created")]
        public DateTime? DateCreated { get; private set; }



        private PortingPortInResource() {

        }
    }
}

