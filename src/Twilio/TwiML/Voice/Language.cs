/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Xml.Linq;

namespace Twilio.TwiML.Voice
{

    /// <summary>
    /// Language TwiML Noun
    /// </summary>
    public class Language : TwiML
    {
        /// <summary>
        /// Language code of this language setting is for
        /// </summary>
        public string Code { get; set; }
        /// <summary>
        /// Provider to be used for text-to-speech of this language
        /// </summary>
        public string TtsProvider { get; set; }
        /// <summary>
        /// Voice to be used for text-to-speech of this language
        /// </summary>
        public string Voice { get; set; }
        /// <summary>
        /// Provider to be used for transcription of this language
        /// </summary>
        public string TranscriptionProvider { get; set; }
        /// <summary>
        /// Speech model to be used for transcription of this language
        /// </summary>
        public string SpeechModel { get; set; }

        /// <summary>
        /// Create a new Language
        /// </summary>
        /// <param name="code"> Language code of this language setting is for </param>
        /// <param name="ttsProvider"> Provider to be used for text-to-speech of this language </param>
        /// <param name="voice"> Voice to be used for text-to-speech of this language </param>
        /// <param name="transcriptionProvider"> Provider to be used for transcription of this language </param>
        /// <param name="speechModel"> Speech model to be used for transcription of this language </param>
        public Language(string code = null,
                        string ttsProvider = null,
                        string voice = null,
                        string transcriptionProvider = null,
                        string speechModel = null) : base("Language")
        {
            this.Code = code;
            this.TtsProvider = ttsProvider;
            this.Voice = voice;
            this.TranscriptionProvider = transcriptionProvider;
            this.SpeechModel = speechModel;
        }

        /// <summary>
        /// Return the attributes of the TwiML tag
        /// </summary>
        protected override List<XAttribute> GetElementAttributes()
        {
            var attributes = new List<XAttribute>();
            if (this.Code != null)
            {
                attributes.Add(new XAttribute("code", this.Code));
            }
            if (this.TtsProvider != null)
            {
                attributes.Add(new XAttribute("ttsProvider", this.TtsProvider));
            }
            if (this.Voice != null)
            {
                attributes.Add(new XAttribute("voice", this.Voice));
            }
            if (this.TranscriptionProvider != null)
            {
                attributes.Add(new XAttribute("transcriptionProvider", this.TranscriptionProvider));
            }
            if (this.SpeechModel != null)
            {
                attributes.Add(new XAttribute("speechModel", this.SpeechModel));
            }
            return attributes;
        }

        /// <summary>
        /// Append a child TwiML element to this element returning this element to allow chaining.
        /// </summary>
        /// <param name="childElem"> Child TwiML element to add </param>
        public new Language Append(TwiML childElem)
        {
            return (Language) base.Append(childElem);
        }

        /// <summary>
        /// Add freeform key-value attributes to the generated xml
        /// </summary>
        /// <param name="key"> Option key </param>
        /// <param name="value"> Option value </param>
        public new Language SetOption(string key, object value)
        {
            return (Language) base.SetOption(key, value);
        }
    }

}